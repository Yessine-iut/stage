{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dofla\\\\Desktop\\\\Stage\\\\propaganda\\\\src\\\\pages\\\\service1_1.js\";\nimport React from 'react'; //import {Reponse} from '../components/textInput'\n\nimport Propagande from \"../components/propagande\";\nimport data from \"../json/jsonmock.json\";\nimport \"../styles/service1_1.css\";\nimport Button from '../components/button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet tabTest = [];\ntabTest.push(new Propagande(\"bleu\", \"debut\", \"fin\"));\ntabTest.push(new Propagande(\"vert\", \"debut2\", \"fin2\"));\ntabTest.push(new Propagande(\"violet\", \"debut3\", \"fin3\"));\ntabTest.push(new Propagande(\"jaune\", \"debut4\", \"fin4\"));\n\nconst Service1_1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"res\",\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column'\n        },\n        children: test()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            position: 'absolute',\n            left: '50%'\n          },\n          children: \"Retour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Service1_1;\n\nfunction test() {\n  /*tabTest.sort(function compare(a, b) {\r\n    if (Reponse.toString().indexOf(a.debut) < Reponse.toString().indexOf(b.debut) )\r\n       return -1;\r\n    if (Reponse.toString().indexOf(a.debut) > Reponse.toString().indexOf(b.debut) )\r\n       return 1;\r\n    return 0;\r\n  });\r\n  let tableau = [];\r\n  let curseur=0;\r\n  while(curseur<Reponse.length){\r\n    \r\n  for(let j=0;j<tabTest.length;j++){\r\n  tableau.push(Reponse.toString().substring(curseur,Reponse.toString().indexOf(tabTest[j].debut)))\r\n  //Changer la couleur ici\r\n  tableau.push(<mark key={tabTest[j].debut}>{tabTest[j].getText(Reponse)}</mark>)\r\n  curseur=Reponse.toString().indexOf(tabTest[j].fin)+tabTest[j].fin.length;\r\n  if(j===tabTest.length-1){\r\n    tableau.push(Reponse.toString().substring(curseur))\r\n    curseur=Reponse.length;\r\n  }\r\n  }\r\n  }\r\n  return <>{tableau}</>;*/\n  //return test2;\n  let tableau = [];\n  let after = \"\";\n  data.forEach((post, index) => {\n    let id = \"propaganda\" + post.label;\n\n    if (after === data[index].post.text) {\n      let curseur = 0;\n\n      while (curseur < post.text.length) {\n        for (let j = 0; j < tabTest.length; j++) {\n          tableau.push(post.text.substring(curseur, post.text.indexOf(post.span))); //Changer la couleur ici\n\n          tableau.push( /*#__PURE__*/_jsxDEV(\"mark\", {\n            children: tabTest[j].getText(Reponse)\n          }, tabTest[j].debut, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 22\n          }, this));\n          curseur = Reponse.toString().indexOf(tabTest[j].fin) + tabTest[j].fin.length;\n\n          if (j === tabTest.length - 1) {\n            tableau.push(Reponse.toString().substring(curseur));\n            curseur = Reponse.length;\n          }\n        }\n      }\n    } else {\n      after = post.text;\n      let numero = post.text.indexOf(post.span);\n      let partie1 = \"\";\n      let marque = \"\";\n      let fin = \"\";\n\n      for (let i = 0; i < numero; i++) {\n        partie1 = partie1 + post.text.charAt(i).toString();\n      }\n\n      for (let i = 0; i < post.span.length; i++) {\n        //console.log(Reponse.toString().charAt(i))\n        marque = marque + post.text.charAt(i + numero).toString();\n      }\n\n      for (let i = numero + post.span.length; i < post.text.length; i++) {\n        //console.log(Reponse.toString().charAt(i))\n        fin = fin + post.text.charAt(i).toString();\n      }\n\n      let marqueFinale = /*#__PURE__*/_jsxDEV(\"mark\", {\n        id: id,\n        children: post.span\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 26\n      }, this);\n\n      tableau.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [partie1, marqueFinale, fin]\n      }, void 0, true));\n    }\n  });\n  return tableau;\n}\n\nfunction getText(Reponse, debut) {\n  let numero = Reponse.toString().indexOf(debut);\n  let partie1 = \"\";\n  let marque = \"\";\n  let fin = \"\";\n\n  for (let i = 0; i < numero; i++) {\n    partie1 = partie1 + Reponse.toString().charAt(i).toString();\n  }\n\n  for (let i = 0; i < debut.length; i++) {\n    //console.log(Reponse.toString().charAt(i))\n    marque = marque + Reponse.toString().charAt(i + numero).toString();\n  }\n\n  for (let i = numero + debut.length; i < Reponse.length; i++) {\n    //console.log(Reponse.toString().charAt(i))\n    fin = fin + Reponse.toString().charAt(i).toString();\n  }\n\n  return marque;\n}\n\nexport default Service1_1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service1_1\");","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/src/pages/service1_1.js"],"names":["React","Propagande","data","Button","tabTest","push","Service1_1","justifyContent","alignItems","flexDirection","test","position","left","tableau","after","forEach","post","index","id","label","text","curseur","length","j","substring","indexOf","span","getText","Reponse","debut","toString","fin","numero","partie1","marque","i","charAt","marqueFinale"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import {Reponse} from '../components/textInput'\r\nimport Propagande from \"../components/propagande\"\r\nimport data from \"../json/jsonmock.json\"\r\nimport \"../styles/service1_1.css\"\r\nimport Button from '../components/button';\r\n\r\n\r\n\r\n\r\n\r\nlet tabTest=[]\r\ntabTest.push(new Propagande(\"bleu\",\"debut\",\"fin\"));\r\ntabTest.push(new Propagande(\"vert\",\"debut2\",\"fin2\"));\r\ntabTest.push(new Propagande(\"violet\",\"debut3\",\"fin3\"));\r\ntabTest.push(new Propagande(\"jaune\",\"debut4\",\"fin4\"));\r\n\r\n\r\nconst Service1_1 = () => {\r\n    return (\r\n      <div\r\n>\r\n        <div>\r\n        {  /* {Reponse}*/}\r\n        \r\n           <div id=\"res\" style={{\r\n       justifyContent:'center', alignItems:'center',flexDirection:'column'\r\n      }}>{test()}    \r\n\r\n      </div> \r\n      <div id=\"btn\"><Button style={{\r\n        position: 'absolute',\r\n        left: '50%',\r\n      }}>Retour</Button>\r\n      </div>\r\n         { /* <mark>test</mark>*/}\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n  };\r\n  \r\n  function test(){\r\n    /*tabTest.sort(function compare(a, b) {\r\n      if (Reponse.toString().indexOf(a.debut) < Reponse.toString().indexOf(b.debut) )\r\n         return -1;\r\n      if (Reponse.toString().indexOf(a.debut) > Reponse.toString().indexOf(b.debut) )\r\n         return 1;\r\n      return 0;\r\n    });\r\n  let tableau = [];\r\n  let curseur=0;\r\n  while(curseur<Reponse.length){\r\n      \r\n    for(let j=0;j<tabTest.length;j++){\r\n    tableau.push(Reponse.toString().substring(curseur,Reponse.toString().indexOf(tabTest[j].debut)))\r\n    //Changer la couleur ici\r\n    tableau.push(<mark key={tabTest[j].debut}>{tabTest[j].getText(Reponse)}</mark>)\r\n    curseur=Reponse.toString().indexOf(tabTest[j].fin)+tabTest[j].fin.length;\r\n    if(j===tabTest.length-1){\r\n      tableau.push(Reponse.toString().substring(curseur))\r\n      curseur=Reponse.length;\r\n    }\r\n    }\r\n  }\r\n  return <>{tableau}</>;*/\r\n\r\n   //return test2;\r\n   let tableau=[]\r\n   let after=\"\";\r\n   data.forEach((post,index)=>{\r\n    let id=\"propaganda\"+post.label\r\n    if(after===data[index].post.text){\r\n      let curseur=0;\r\n      while(curseur<post.text.length){\r\n          \r\n        for(let j=0;j<tabTest.length;j++){\r\n        tableau.push(post.text.substring(curseur,post.text.indexOf(post.span)))\r\n        //Changer la couleur ici\r\n        tableau.push(<mark key={tabTest[j].debut}>{tabTest[j].getText(Reponse)}</mark>)\r\n        curseur=Reponse.toString().indexOf(tabTest[j].fin)+tabTest[j].fin.length;\r\n        if(j===tabTest.length-1){\r\n          tableau.push(Reponse.toString().substring(curseur))\r\n          curseur=Reponse.length;\r\n        }\r\n        }\r\n      }\r\n    }else{\r\n      after=post.text\r\n      let numero=post.text.indexOf(post.span);\r\n      let partie1=\"\";\r\n      let marque=\"\";\r\n      let fin=\"\";\r\n      for(let i=0;i<numero;i++){\r\n        partie1=partie1+post.text.charAt(i).toString();\r\n  \r\n      }\r\n      for(let i=0;i<post.span.length;i++){\r\n        //console.log(Reponse.toString().charAt(i))\r\n        marque=marque+post.text.charAt(i+numero).toString();\r\n        }\r\n      for(let i=numero+post.span.length;i<post.text.length;i++){\r\n         //console.log(Reponse.toString().charAt(i))\r\n         fin=fin+post.text.charAt(i).toString();\r\n         }\r\n        let marqueFinale=<mark id={id}>{post.span}</mark>\r\n         tableau.push(<>{partie1}{marqueFinale}{fin}</>)\r\n\r\n    }\r\n   \r\n\r\n   })\r\n   return tableau\r\n  }\r\n\r\n  function getText(Reponse,debut){\r\n    let numero=Reponse.toString().indexOf(debut);\r\n    let partie1=\"\";\r\n    let marque=\"\";\r\n    let fin=\"\";\r\n    for(let i=0;i<numero;i++){\r\n      partie1=partie1+Reponse.toString().charAt(i).toString();\r\n\r\n    }\r\n    for(let i=0;i<debut.length;i++){\r\n      //console.log(Reponse.toString().charAt(i))\r\n      marque=marque+Reponse.toString().charAt(i+numero).toString();\r\n      }\r\n    for(let i=numero+debut.length;i<Reponse.length;i++){\r\n       //console.log(Reponse.toString().charAt(i))\r\n       fin=fin+Reponse.toString().charAt(i).toString();\r\n       }\r\n       return marque;\r\n}\r\n\r\n  export default Service1_1;\r\n"]},"metadata":{},"sourceType":"module"}