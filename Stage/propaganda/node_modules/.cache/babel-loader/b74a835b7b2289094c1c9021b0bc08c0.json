{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dofla\\\\Desktop\\\\Stage\\\\propaganda\\\\src\\\\pages\\\\about.js\";\n//import { Link} from \"react-router-dom\";\n//import Button from '../components/button';\n//import ProductHero from '../components/productHero.js';\nimport Propaganda from \"../images/propaganda.png\";\nimport \"../styles/about.css\";\nimport Button from '../components/button';\nimport Card from '../components/card2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"h1\",\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginLeft: '2%',\n        marginRight: '2%'\n      },\n      children: \"One of the mechanisms through which disinformation is spreading online, in particular through social media, is by employing propaganda techniques. These include specific rhetorical and psychological strategies, ranging from leveraging on emotions to exploiting logical fallacies. We adopt a supervised approach (i.e., BERT and RoBERTa Transformer-based models) to classify textual snippets both as propaganda messages and according to the precise applied propaganda technique, as well as a detailed linguistic analysis of the features characterising propaganda information in text (e.g., semantic, sentiment and argumentation features). We provide two automatized services concerning propaganda our detection system. As the first service: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: \"20px\",\n        marginLeft: '2%',\n        textDecoration: 'underline'\n      },\n      children: \"Snippets Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginLeft: '2%',\n        marginRight: '2%'\n      },\n      children: [\"we let users freely input a text to employ our supervised systems to display precisely propaganda snippets if it exists in their text, along with probability of propaganda technique used. Users can also download their outputs as a JSON file for academic usages. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 83\n      }, this), \"The later service: \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: \"20px\",\n        marginLeft: '2%',\n        textDecoration: 'underline'\n      },\n      children: \"Propaganda Word Clouds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginLeft: '2%',\n        marginRight: '2%'\n      },\n      children: \" We employ our supervised system to display word clouds from a free text. Users can observe easily the most important snippets regarding its propaganda technique(s) and probability. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginLeft: '2%',\n        marginRight: '2%'\n      },\n      children: \"Our system consists of two processes which employ a supervised approach to proceed the prediction at sentence-level. We firstly detect the propaganda snippets of the given input as our first step, where in this process we obtain 0.88 macro F1-scorein. As the last part of our pipeline, we employ a supervised classifier to perform a classification on 14 propaganda techniques [1]. The result of this part of our system obtains in average of all techniques is of ~0.90 macro F1-score. The system we reported our scores were trained and tested based on academic-used resources from two computational linguistic workshops namely, NLP4IF\\u20192019 (https://propaganda.qcri.org/nlp4if-shared-task/), and SemEval2020 Task-11 (https://propaganda.qcri.org/ptc/index.html).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/src/pages/about.js"],"names":["Propaganda","Button","Card","About","marginLeft","marginRight","fontSize","textDecoration"],"mappings":";AAAA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAO,qBAAP;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAChB,sBACA;AAAA,4BACD;AAAI,MAAA,EAAE,EAAC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAED;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAC,IAAZ;AAAiBC,QAAAA,WAAW,EAAC;AAA7B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFC,eASA;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC,MAAV;AAAiBF,QAAAA,UAAU,EAAC,IAA5B;AAAiCG,QAAAA,cAAc,EAAC;AAAhD,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATA,eAUA;AAAG,MAAA,KAAK,EAAE;AAACH,QAAAA,UAAU,EAAC,IAAZ;AAAiBC,QAAAA,WAAW,EAAC;AAA7B,OAAV;AAAA,wSAE8E;AAAA;AAAA;AAAA;AAAA,cAF9E;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA,eAaA;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC,MAAV;AAAiBF,QAAAA,UAAU,EAAC,IAA5B;AAAiCG,QAAAA,cAAc,EAAC;AAAhD,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA,eAcA;AAAG,MAAA,KAAK,EAAE;AAACH,QAAAA,UAAU,EAAC,IAAZ;AAAiBC,QAAAA,WAAW,EAAC;AAA7B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdA,eAeA;AAAG,MAAA,KAAK,EAAE;AAACD,QAAAA,UAAU,EAAC,IAAZ;AAAiBC,QAAAA,WAAW,EAAC;AAA7B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfA;AAAA,kBADA;AAoBH,CArBD;;KAAMF,K;AAuBJ,eAAeA,KAAf","sourcesContent":["//import { Link} from \"react-router-dom\";\r\n//import Button from '../components/button';\r\n//import ProductHero from '../components/productHero.js';\r\n\r\nimport Propaganda from \"../images/propaganda.png\";\r\nimport \"../styles/about.css\";\r\n\r\nimport Button from '../components/button';\r\nimport Card from '../components/card2';\r\n\r\n\r\n\r\n\r\nconst About = () => {\r\n    return (\r\n    <>\r\n   <h1 id='h1'>About</h1>\r\n   <p style={{marginLeft:'2%',marginRight:'2%'}}>One of the mechanisms \r\n   through which disinformation is spreading online, in particular through social media, \r\n   is by employing propaganda techniques. These include specific rhetorical and psychological strategies, \r\n   ranging from leveraging on emotions to exploiting logical fallacies. We adopt a supervised approach \r\n   (i.e., BERT and RoBERTa Transformer-based models) to classify textual snippets both as propaganda messages and according \r\n   to the precise applied propaganda technique, as well as a detailed linguistic analysis of the features characterising propaganda \r\n   information in text (e.g., semantic, sentiment and argumentation features). We provide two automatized services concerning propaganda our detection system. As the first service: </p>\r\n    <h2 style={{fontSize:\"20px\",marginLeft:'2%',textDecoration:'underline'}}>Snippets Detection</h2>\r\n    <p style={{marginLeft:'2%',marginRight:'2%'}}>we let users freely input a text to employ our supervised systems to display \r\n        precisely propaganda snippets if it exists in their text, along with probability of propaganda technique used. \r\n        Users can also download their outputs as a JSON file for academic usages. <br/>The later service: </p>\r\n    <h2 style={{fontSize:\"20px\",marginLeft:'2%',textDecoration:'underline'}}>Propaganda Word Clouds</h2>\r\n    <p style={{marginLeft:'2%',marginRight:'2%'}}> We employ our supervised system to display word clouds from a free text. Users can observe easily the most important snippets regarding its propaganda technique(s) and probability. </p>\r\n    <p style={{marginLeft:'2%',marginRight:'2%'}}>Our system consists of two processes which employ a supervised approach to proceed the prediction at sentence-level. We firstly detect the propaganda snippets of the given input as our first step, where in this process we obtain 0.88 macro F1-scorein. As the last part of our pipeline, we employ a supervised classifier to perform a classification on 14 propaganda techniques [1]. The result of this part of our system obtains in average of all techniques is of ~0.90 macro F1-score. The system we reported our scores were trained and tested based on academic-used resources from two computational linguistic workshops namely, NLP4IFâ€™2019 (https://propaganda.qcri.org/nlp4if-shared-task/), and SemEval2020 Task-11 (https://propaganda.qcri.org/ptc/index.html).\r\n\r\n</p></>);\r\n    \r\n};\r\n  \r\n  export default About;"]},"metadata":{},"sourceType":"module"}