{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dofla\\\\Desktop\\\\Stage\\\\propaganda\\\\src\\\\components\\\\MultipleChkbox.js\";\nimport React from 'react';\nimport \"../styles/service1_1.css\";\nimport \"../styles/multipleChkbox.css\";\nimport Chkbox from './chkbox'; //import data from \"../json/jsonmockV4.json\"\n\nimport { data } from '../components/textInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Multiplechkbox extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        left: '-15%',\n        top: '95px',\n        backgroundColor: 'rgb(217, 217, 217)',\n        minHeight: '450px',\n        maxHeight: '450px',\n        overflowY: \"scroll\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          style: {\n            position: 'relative'\n          },\n          children: creerChckBox()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n/*function creerChckBox(){\r\n    let propagandas=[\"Appeal_to_Authority\",\"Appeal_to_fear-prejudice\",\"Bandwagon,Reductio_ad_hitlerum\",\"Black-and-White_Fallacy\",\"Causal_Oversimplification\",\"Doubt\",\"Exaggeration,Minimisation\",\"Flag-Waving\",\"Loaded_Language\",\"Name_Calling,Labeling\",\"Repetition\",\"Slogans\",\"Thought-terminating_Cliches\",\"Whataboutism,Straw_Men,Red_Herring\"]\r\n    let colors=[\"yellow\",\"red\",\"green\",\"magenta\",\"maroon\",\"sienna\",\"orange\",\"lime\",\"#9B5D9B\",\"aqua\",\"pink\",\"#8486D4\",\"#5A6309\",\"#D1C1F0\"]\r\n    let chckBoxes=[]\r\n    //let taillePropaganda=0;\r\n    let tailleSpan=0;\r\n    let spans=[]\r\n    let labels=[]\r\n    let sans_doublons\r\n    for(let i in data.article701225819){\r\n        //taillePropaganda++;\r\n     // }\r\n   // for(let i=1;i<taillePropaganda+1;i++){\r\n        for(let j in data.article701225819[i]){\r\n          j=j-1\r\n          j=j+1\r\n          tailleSpan++;\r\n        }\r\n        for(let v=1;v<tailleSpan;v++){\r\n          spans.push(data.article701225819[i][\"span_\"+v])\r\n    \r\n        }\r\n        spans.sort(function compare(a, b) {\r\n          if (a.start_char < b.start_char )\r\n             return -1;\r\n          if (a.start_char > b.start_char )\r\n             return 1;\r\n          return 0;\r\n        }); \r\n        for(let v=0;v<spans.length;v++){\r\n            labels.push(spans[v].label)\r\n        }\r\n        tailleSpan=0;\r\n        sans_doublons = Array.from(new Set(labels));\r\n    }\r\n    var index = sans_doublons.indexOf(0);\r\n    if (index > -1) {\r\n      sans_doublons.splice(index, 1);\r\n    }\r\n    for(let i=0;i<sans_doublons.length;i++){\r\n     chckBoxes.push(<Chkbox  key={i} name={propagandas[sans_doublons[i]-1]} identifiant={'propaganda'+sans_doublons[i]} color={colors[sans_doublons[i]-1]} label={\"\"+sans_doublons[i]}/>)\r\n    }\r\n   /* chckBoxes.push(<Chkbox name=\"propaganda 1\" identifiant='propaganda1' />)\r\n    chckBoxes.push(<Chkbox name=\"propaganda 2\"  identifiant='propaganda2' />)\r\n    chckBoxes.push(<Chkbox name=\"propaganda 3\" identifiant='propaganda3' />)*/\n\n/*return chckBoxes;\r\n    \r\n \r\n}*/\n\n\nfunction creerChckBox() {\n  let propagandas = [\"Appeal_to_Authority\", \"Appeal_to_fear-prejudice\", \"Bandwagon,Reductio_ad_hitlerum\", \"Black-and-White_Fallacy\", \"Causal_Oversimplification\", \"Doubt\", \"Exaggeration,Minimisation\", \"Flag-Waving\", \"Loaded_Language\", \"Name_Calling,Labeling\", \"Repetition\", \"Slogans\", \"Thought-terminating_Cliches\", \"Whataboutism,Straw_Men\\n,Red_Herring\"]; //let colors=[\"yellow\",\"red\",\"green\",\"magenta\",\"maroon\",\"sienna\",\"orange\",\"lime\",\"#9B5D9B\",\"aqua\",\"pink\",\"#8486D4\",\"#5A6309\",\"#D1C1F0\"]\n\n  let colors = {\n    0: [\"#ffffcc\", \"#ffff99\", \"#ffff66\", \"#ffff32\", \"#ffff00\"],\n    1: [\"#ffe5e5\", \"#ffb2b2\", \"#ff7f7f\", \"#ff6666\", \"#ff0000\"],\n    2: [\"#e5f2e5\", \"#b2d8b2\", \"#7fbf7f\", \"#4ca64c\", \"#008000\"],\n    3: [\"#ffb2ff\", \"#ff99ff\", \"#ff7fff\", \"#ff4cff\", \"#ff00ff\"],\n    4: [\"#e5cccc\", \"#D6ADAD\", \"#cc9999\", \"#b26666\", \"#a34747\"],\n    5: [\"#e4e4e4\", \"#c9c9c9\", \"#afafaf\", \"#949494\", \"#7a7a7a\"],\n    6: [\"#ffedcc\", \"#ffdb99\", \"#ffc966\", \"#ffb732\", \"#ffa500\"],\n    7: [\"#ccffcc\", \"#99ff99\", \"#66ff66\", \"#32ff32\", \"#00ff00\"],\n    8: [\"#ebdeeb\", \"#d7bed7\", \"#c39dc3\", \"#af7daf\", \"#9b5d9b\"],\n    9: [\"#ccffff\", \"#99ffff\", \"#66ffff\", \"#32ffff\", \"#00ffff\"],\n    10: [\"#fff2f4\", \"#ffe5ea\", \"#ffd9df\", \"#ffccd5\", \"#ffc0cb\"],\n    11: [\"#e6e6f6\", \"#cdceed\", \"#b5b6e5\", \"#9c9edc\", \"#8486d4\"],\n    12: [\"#F3EEEA\", \"#e6ded5\", \"#d4c5b5\", \"#c7b4a0\", \"#c1ac95\"],\n    13: [\"#ece6f9\", \"#ded3f4\", \"#dacdf3\", \"#d5c7f1\", \"#d1c1f0\"]\n  }; //console.log(\"COLORS \"+colors[0])\n\n  let chckBoxes = []; //let taillePropaganda=0;\n\n  let tailleSpan = 0;\n  let spans = [];\n  let labels = [];\n  let sans_doublons;\n  let name = \"\";\n\n  for (let i in data) {\n    name = i;\n  }\n\n  for (let i in data[name]) {\n    //taillePropaganda++;\n    // }\n    // for(let i=1;i<taillePropaganda+1;i++){\n    tailleSpan = Object.keys(data[name][i]).length;\n\n    for (let v = 1; v < tailleSpan; v++) {\n      spans.push(data[name][i][\"span_\" + v]);\n    }\n\n    spans.sort(function compare(a, b) {\n      if (a.start_char < b.start_char) return -1;\n      if (a.start_char > b.start_char) return 1;\n      return 0;\n    });\n\n    for (let v = 0; v < spans.length; v++) {\n      if (typeof spans[v].label !== 'object') {\n        labels.push(spans[v].label);\n      } else {\n        for (let p = 0; p < spans[v].label.length; p++) {\n          labels.push(spans[v].label[p]);\n        }\n      }\n    }\n\n    tailleSpan = 0;\n    sans_doublons = Array.from(new Set(labels));\n  }\n\n  var index = sans_doublons.indexOf(0);\n\n  if (index > -1) {\n    sans_doublons.splice(index, 1);\n  }\n  /*for(let i=1;i<15;i++){\r\n    chckBoxes.push(<Chkbox key={i} name={propagandas[i-1]} identifiant={'propaganda'+sans_doublons[i-1]} color={colors[i-1]} label={\"\"+i}/>)\r\n   }*/\n\n\n  chckBoxes.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        display: \"inline-flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"mark\", {\n        id: \"propaganda99\",\n        children: \"Propaganda Techniques\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 34\n    }, this)\n  }, 15, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 19\n  }, this));\n  /*chckBoxes.push(<><div style={{float:'left',marginRight:'150px',fontSize:\"10px\"}}>Low</div><div style={{fontSize:\"10px\"}}>Hight</div><div>\r\n    <div style={{marginLeft:\"70px\",fontSize:\"12px\"}}>probability</div>\r\n   -----------------------------------&gt;</div></>)*/\n\n  for (let i = 0; i < sans_doublons.length; i++) {\n    /*if(i===0){\r\n      chckBoxes.push(<div>------------&#155;</div>)\r\n    }*/\n    if (sans_doublons[i] !== 0) {\n      chckBoxes.push( /*#__PURE__*/_jsxDEV(Chkbox, {\n        name: propagandas[sans_doublons[i] - 1],\n        identifiant: 'propaganda' + sans_doublons[i],\n        color: colors[sans_doublons[i] - 1],\n        label: \"\" + sans_doublons[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }, this));\n    }\n  }\n\n  chckBoxes.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        display: \"inline-flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"mark\", {\n        style: {\n          border: \"1px solid black\",\n          marginLeft: \"14px\",\n          paddingLeft: \"13px\",\n          paddingRight: \"13px\",\n          marginRight: \"5px\",\n          marginBottom: '20px'\n        },\n        id: \"propaganda99\",\n        children: \"Bold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 8\n      }, this), \"Multiple Propaganda\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 32\n    }, this)\n  }, 16, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 18\n  }, this));\n  /* chckBoxes.push(<Chkbox name=\"propaganda 1\" identifiant='propaganda1' />)\r\n   chckBoxes.push(<Chkbox name=\"propaganda 2\"  identifiant='propaganda2' />)\r\n   chckBoxes.push(<Chkbox name=\"propaganda 3\" identifiant='propaganda3' />)*/\n\n  return chckBoxes;\n}\n\nexport default Multiplechkbox;","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/src/components/MultipleChkbox.js"],"names":["React","Chkbox","data","Multiplechkbox","Component","render","position","left","top","backgroundColor","minHeight","maxHeight","overflowY","creerChckBox","propagandas","colors","chckBoxes","tailleSpan","spans","labels","sans_doublons","name","i","Object","keys","length","v","push","sort","compare","a","b","start_char","label","p","Array","from","Set","index","indexOf","splice","display","border","marginLeft","paddingLeft","paddingRight","marginRight","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport \"../styles/service1_1.css\"\r\nimport \"../styles/multipleChkbox.css\"\r\nimport Chkbox from './chkbox';\r\n//import data from \"../json/jsonmockV4.json\"\r\nimport {data} from '../components/textInput'\r\n\r\nclass Multiplechkbox extends React.Component{\r\n    render(){\r\n        return(\r\n        \r\n        <div  style={{\r\n            position: 'relative',\r\n            left: '-15%',\r\n            top:'95px',\r\n            backgroundColor:'rgb(217, 217, 217)',\r\n            minHeight:'450px',\r\n            maxHeight:'450px',\r\n            overflowY:\"scroll\"\r\n                    }}> \r\n            \r\n            <table>\r\n                <tbody style={{position:'relative'}}>\r\n                 \r\n        {creerChckBox()}\r\n      \r\n        </tbody>\r\n        </table>\r\n                \r\n               \r\n           \r\n\r\n           \r\n\r\n        </div>);\r\n    }\r\n   \r\n \r\n    \r\n    \r\n\r\n}\r\n/*function creerChckBox(){\r\n    let propagandas=[\"Appeal_to_Authority\",\"Appeal_to_fear-prejudice\",\"Bandwagon,Reductio_ad_hitlerum\",\"Black-and-White_Fallacy\",\"Causal_Oversimplification\",\"Doubt\",\"Exaggeration,Minimisation\",\"Flag-Waving\",\"Loaded_Language\",\"Name_Calling,Labeling\",\"Repetition\",\"Slogans\",\"Thought-terminating_Cliches\",\"Whataboutism,Straw_Men,Red_Herring\"]\r\n    let colors=[\"yellow\",\"red\",\"green\",\"magenta\",\"maroon\",\"sienna\",\"orange\",\"lime\",\"#9B5D9B\",\"aqua\",\"pink\",\"#8486D4\",\"#5A6309\",\"#D1C1F0\"]\r\n    let chckBoxes=[]\r\n    //let taillePropaganda=0;\r\n    let tailleSpan=0;\r\n    let spans=[]\r\n    let labels=[]\r\n    let sans_doublons\r\n    for(let i in data.article701225819){\r\n        //taillePropaganda++;\r\n     // }\r\n   // for(let i=1;i<taillePropaganda+1;i++){\r\n        for(let j in data.article701225819[i]){\r\n          j=j-1\r\n          j=j+1\r\n          tailleSpan++;\r\n        }\r\n        for(let v=1;v<tailleSpan;v++){\r\n          spans.push(data.article701225819[i][\"span_\"+v])\r\n    \r\n        }\r\n        spans.sort(function compare(a, b) {\r\n          if (a.start_char < b.start_char )\r\n             return -1;\r\n          if (a.start_char > b.start_char )\r\n             return 1;\r\n          return 0;\r\n        }); \r\n        for(let v=0;v<spans.length;v++){\r\n            labels.push(spans[v].label)\r\n        }\r\n        tailleSpan=0;\r\n        sans_doublons = Array.from(new Set(labels));\r\n    }\r\n    var index = sans_doublons.indexOf(0);\r\n    if (index > -1) {\r\n      sans_doublons.splice(index, 1);\r\n    }\r\n    for(let i=0;i<sans_doublons.length;i++){\r\n     chckBoxes.push(<Chkbox  key={i} name={propagandas[sans_doublons[i]-1]} identifiant={'propaganda'+sans_doublons[i]} color={colors[sans_doublons[i]-1]} label={\"\"+sans_doublons[i]}/>)\r\n    }\r\n   /* chckBoxes.push(<Chkbox name=\"propaganda 1\" identifiant='propaganda1' />)\r\n    chckBoxes.push(<Chkbox name=\"propaganda 2\"  identifiant='propaganda2' />)\r\n    chckBoxes.push(<Chkbox name=\"propaganda 3\" identifiant='propaganda3' />)*/\r\n/*return chckBoxes;\r\n    \r\n \r\n}*/\r\nfunction creerChckBox(){\r\n  let propagandas=[\"Appeal_to_Authority\",\"Appeal_to_fear-prejudice\",\"Bandwagon,Reductio_ad_hitlerum\",\"Black-and-White_Fallacy\",\"Causal_Oversimplification\",\"Doubt\",\"Exaggeration,Minimisation\",\"Flag-Waving\",\"Loaded_Language\",\"Name_Calling,Labeling\",\"Repetition\",\"Slogans\",\"Thought-terminating_Cliches\",\"Whataboutism,Straw_Men\\n,Red_Herring\"]\r\n  //let colors=[\"yellow\",\"red\",\"green\",\"magenta\",\"maroon\",\"sienna\",\"orange\",\"lime\",\"#9B5D9B\",\"aqua\",\"pink\",\"#8486D4\",\"#5A6309\",\"#D1C1F0\"]\r\n  let colors = {\r\n    0: [\"#ffffcc\",\"#ffff99\",\"#ffff66\",\"#ffff32\",\"#ffff00\"],\r\n    1: [\"#ffe5e5\",\"#ffb2b2\",\"#ff7f7f\",\"#ff6666\",\"#ff0000\"],\r\n    2: [\"#e5f2e5\",\"#b2d8b2\",\"#7fbf7f\",\"#4ca64c\",\"#008000\"],\r\n    3: [\"#ffb2ff\",\"#ff99ff\",\"#ff7fff\",\"#ff4cff\",\"#ff00ff\"],\r\n    4:[\"#e5cccc\",\"#D6ADAD\",\"#cc9999\",\"#b26666\",\"#a34747\"],\r\n    5:[\"#e4e4e4\",\"#c9c9c9\",\"#afafaf\",\"#949494\",\"#7a7a7a\"],\r\n    6:[\"#ffedcc\",\"#ffdb99\",\"#ffc966\",\"#ffb732\",\"#ffa500\"],\r\n    7:[\"#ccffcc\",\"#99ff99\",\"#66ff66\",\"#32ff32\",\"#00ff00\"],\r\n    8:[\"#ebdeeb\",\"#d7bed7\",\"#c39dc3\",\"#af7daf\",\"#9b5d9b\"],\r\n    9:[\"#ccffff\",\"#99ffff\",\"#66ffff\",\"#32ffff\",\"#00ffff\"],\r\n    10:[\"#fff2f4\",\"#ffe5ea\",\"#ffd9df\",\"#ffccd5\",\"#ffc0cb\"],\r\n    11:[\"#e6e6f6\",\"#cdceed\",\"#b5b6e5\",\"#9c9edc\",\"#8486d4\"],\r\n    12:[\"#F3EEEA\",\"#e6ded5\",\"#d4c5b5\",\"#c7b4a0\",\"#c1ac95\"],\r\n    13:[\"#ece6f9\",\"#ded3f4\",\"#dacdf3\",\"#d5c7f1\",\"#d1c1f0\"]};\r\n    //console.log(\"COLORS \"+colors[0])\r\n  let chckBoxes=[]\r\n  //let taillePropaganda=0;\r\n  let tailleSpan=0;\r\n  let spans=[]\r\n  let labels=[]\r\n  let sans_doublons\r\n  let name=\"\"\r\n  for(let i in data){\r\n    name=i\r\n  }\r\n  for(let i in data[name]){\r\n      //taillePropaganda++;\r\n   // }\r\n // for(let i=1;i<taillePropaganda+1;i++){\r\n  tailleSpan=Object.keys(data[name][i]).length\r\n\r\n      for(let v=1;v<tailleSpan;v++){\r\n        spans.push(data[name][i][\"span_\"+v])\r\n  \r\n      }\r\n      spans.sort(function compare(a, b) {\r\n        if (a.start_char < b.start_char )\r\n           return -1;\r\n        if (a.start_char > b.start_char )\r\n           return 1;\r\n        return 0;\r\n      }); \r\n      for(let v=0;v<spans.length;v++){\r\n          if(typeof(spans[v].label)!=='object'){\r\n            labels.push(spans[v].label)\r\n\r\n          }else{\r\n            for(let p=0;p<spans[v].label.length;p++){\r\n              labels.push(spans[v].label[p])\r\n\r\n            }\r\n\r\n          }\r\n      }\r\n      tailleSpan=0;\r\n      sans_doublons = Array.from(new Set(labels));\r\n  }\r\n  var index = sans_doublons.indexOf(0);\r\n  if (index > -1) {\r\n    sans_doublons.splice(index, 1);\r\n  }\r\n  /*for(let i=1;i<15;i++){\r\n    chckBoxes.push(<Chkbox key={i} name={propagandas[i-1]} identifiant={'propaganda'+sans_doublons[i-1]} color={colors[i-1]} label={\"\"+i}/>)\r\n   }*/\r\n   chckBoxes.push(<tr  key={15} ><td style={{\r\n    display:\"inline-flex\",\r\n    }}><mark id=\"propaganda99\">Propaganda Techniques</mark></td></tr>)\r\n    /*chckBoxes.push(<><div style={{float:'left',marginRight:'150px',fontSize:\"10px\"}}>Low</div><div style={{fontSize:\"10px\"}}>Hight</div><div>\r\n      <div style={{marginLeft:\"70px\",fontSize:\"12px\"}}>probability</div>\r\n     -----------------------------------&gt;</div></>)*/\r\n\r\n  for(let i=0;i<sans_doublons.length;i++){\r\n    /*if(i===0){\r\n      chckBoxes.push(<div>------------&#155;</div>)\r\n    }*/\r\n    if(sans_doublons[i]!==0){\r\n   chckBoxes.push(<Chkbox key={i} name={propagandas[sans_doublons[i]-1]} identifiant={'propaganda'+sans_doublons[i]} color={colors[sans_doublons[i]-1]} label={\"\"+sans_doublons[i]}/>)\r\n  }\r\n\r\n  }\r\n  chckBoxes.push(<tr key={16} ><td style={{\r\n    display:\"inline-flex\",\r\n    }}><mark style={{border:\"1px solid black\",marginLeft:\"14px\",paddingLeft:\"13px\",paddingRight:\"13px\",marginRight:\"5px\",  marginBottom: '20px'}} id=\"propaganda99\" >Bold</mark>Multiple Propaganda</td></tr>)\r\n /* chckBoxes.push(<Chkbox name=\"propaganda 1\" identifiant='propaganda1' />)\r\n  chckBoxes.push(<Chkbox name=\"propaganda 2\"  identifiant='propaganda2' />)\r\n  chckBoxes.push(<Chkbox name=\"propaganda 3\" identifiant='propaganda3' />)*/\r\n \r\n  return chckBoxes;\r\n  \r\n\r\n}\r\n\r\nexport default Multiplechkbox;"]},"metadata":{},"sourceType":"module"}