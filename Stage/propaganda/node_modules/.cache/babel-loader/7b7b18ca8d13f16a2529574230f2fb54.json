{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dofla\\\\Desktop\\\\Stage\\\\propaganda\\\\src\\\\pages\\\\service1_1.js\";\nimport React from 'react'; //import {Reponse} from '../components/textInput'\n\nimport data from \"../json/jsonmock.json\";\nimport \"../styles/service1_1.css\";\nimport Button from '../components/button';\nimport Multiplechkbox from '../components/MultipleChkbox';\nimport { Link } from \"react-router-dom\";\nimport Span from '../components/span';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Service1_1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"res\",\n        style: {\n          position: 'absolute',\n          right: '20%',\n          marginTop: '-3em'\n        },\n        children: [texte2(), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"btn\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                position: 'relative',\n                left: '50%',\n                marginTop: '2em'\n              },\n              children: \"Retour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: '80%',\n          top: '25%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Multiplechkbox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Service1_1;\n\nfunction texte() {\n  let tableau = []; //let tabSpan=[]\n\n  let tabTexte = [];\n\n  for (let index = 0; index < data.length; index++) {\n    //tabSpan.push(data[index].span);\n    tabTexte.push(data[index].text);\n  }\n\n  for (let index = 0; index < data.length; index++) {\n    if (duplicateTexte(tabTexte, data[index].text, index)) {//TOUT CE QUI NE FONCTIONNE PAS\n\n      /* let cpt=1;\r\n       tabSpan.push(data[index].span)\r\n       while(index+cpt<data.length && data[index+cpt].text===data[index].text){\r\n         tabSpan.push(data[index+cpt].span)\r\n         console.log(data[index+cpt].span)\r\n         cpt++;\r\n         console.log(cpt)\r\n         }\r\n       //Trier le tableau de span A revoir on sait jamais\r\n       tabSpan.sort(function compare(a, b) {\r\n         if (data[index].text.indexOf(a) < data[index].text.indexOf(b) )\r\n            return -1;\r\n         if (data[index].text.indexOf(a) > data[index].text.indexOf(b) )\r\n            return 1;\r\n         return 0;\r\n       }); \r\n       //Traiter chaque span\r\n       let sans_doublons = Array.from(new Set(tabSpan));\r\n         console.log(\"Sans doublon \")\r\n       console.log(sans_doublons)\r\n       console.log(\"tabSpan \")\r\n       console.log(tabSpan)\r\n      sans_doublons.sort(function compare(a, b) {\r\n         if (data[index].text.indexOf(a) < data[index].text.indexOf(b) )\r\n            return -1;\r\n         if (data[index].text.indexOf(a) > data[index].text.indexOf(b) )\r\n            return 1;\r\n         return 0;\r\n       }); \r\n       let boucle=0;\r\n       let curseur=0;\r\n       //A REVOIR\r\n       while(boucle<sans_doublons.length && curseur<data[index].text.length){\r\n         if(data[index].text.indexOf(sans_doublons[boucle])!==-1){\r\n           tableau.push(data[index].text.substring(curseur,data[index].text.indexOf(sans_doublons[boucle])))\r\n           let id=\"propaganda\"+data[index].label\r\n         tableau.push(<mark id={id}>{sans_doublons[boucle]}</mark>)\r\n         curseur=data[index].text.indexOf(sans_doublons[boucle])+sans_doublons[boucle].length\r\n         }\r\n         //IF ICI\r\n         if(index===3){\r\n           //console.log(sans_doublons)\r\n         }\r\n         \r\n         console.log(curseur)\r\n         boucle++;\r\n       }\r\n       \r\n       tableau.push(data[index].text.substring(curseur,data[index].text.length))\r\n           console.log(data[index].text)\r\n       console.log(sans_doublons)\r\n       tabSpan.slice(0, tabSpan.length);\r\n       sans_doublons.slice(0, sans_doublons.length);\r\n       index=index+cpt+1;\r\n          */\n    } else {\n      if (data[index].label === 0) {\n        //Pas de propagande\n        tableau.push(data[index].text);\n        tableau.push(\" \");\n      } else {\n        //Un mot de propagande en une phrase\n        let curseur = data[index].text.indexOf(data[index].span);\n        let id = \"propaganda\" + data[index].label;\n        tableau.push(data[index].text.substring(0, curseur));\n        tableau.push( /*#__PURE__*/_jsxDEV(\"mark\", {\n          id: id,\n          children: data[index].span\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 22\n        }, this));\n        tableau.push(data[index].text.substring(curseur + data[index].span.length));\n        tableau.push(\" \"); //console.log(data[index].text.substring(0,curseur))\n      }\n    }\n  }\n  /* let tab=[]\r\n   tab.push(data[0].text);\r\n  \n   for(let i=1;i<data.length;i++){\r\n     if(data[i].text!==data[i-1].text)\r\n     tab.push(data[i].text);\r\n   }\r\n   return tab*/\n\n\n  return tableau;\n}\n\nfunction texte2() {\n  let propagandas = [];\n  let spans = [];\n  let res = [];\n\n  for (let l in data.article701225819) {\n    propagandas.push(l);\n  } // console.log(data.article701225819[propagandas[0]][\"span_1\"].probability);\n\n\n  for (let i = 0; i < propagandas.length; i++) {\n    for (let j in data.article701225819[propagandas[i]]) {\n      spans.push(new Span(data.article701225819[propagandas[i]][j].span, data.article701225819[propagandas[i]][j].start_char, data.article701225819[propagandas[i]][j].end_index, data.article701225819[propagandas[i]][j].label, data.article701225819[propagandas[i]][j].probability));\n      spans.sort(function compare(a, b) {\n        //console.log(a.start_char,b.start_char)\n        if (a.begin < b.begin) return -1;\n        if (a.begin > b.begin) return 1;\n        return 0;\n      });\n    }\n\n    console.log(spans[0].texteSpan);\n    spans.slice(0, spans.length);\n    res.push(propagandas[i].substring);\n  } //console.log(data[0].span_1)\n\n}\n\nfunction duplicateTexte(tab, texte, index) {\n  for (let i = 0; i < tab.length; i++) {\n    let approche = i - index;\n\n    if ((approche === 1 || approche === -1) && tab[i] === texte) {\n      return true;\n    }\n  }\n}\n/*function duplicateSpan(tab,span){\r\n  for(let i=0;i<tab.length;i++){\r\n    if(tab[i]===span){\r\n      return true;\r\n    }\r\n  }\r\n \r\n}*/\n\n\nexport default Service1_1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service1_1\");","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/src/pages/service1_1.js"],"names":["React","data","Button","Multiplechkbox","Link","Span","Service1_1","position","right","marginTop","texte2","left","top","texte","tableau","tabTexte","index","length","push","text","duplicateTexte","label","curseur","indexOf","span","id","substring","propagandas","spans","res","l","article701225819","i","j","start_char","end_index","probability","sort","compare","a","b","begin","console","log","texteSpan","slice","tab","approche"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAOA,MAAMC,UAAU,GAAG,MAAM;AACrB,sBACE;AAAA,2BAEE;AAAA,8BAGF;AAAK,QAAA,EAAE,EAAC,KAAR;AAAc,QAAA,KAAK,EAAE;AACrBC,UAAAA,QAAQ,EAAE,UADW;AAErBC,UAAAA,KAAK,EAAC,KAFe;AAGrBC,UAAAA,SAAS,EAAC;AAHW,SAArB;AAAA,mBAIIC,MAAM,EAJV,eAKA;AAAK,UAAA,EAAE,EAAC,KAAR;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA,mCAAc,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAE;AAE3BH,gBAAAA,QAAQ,EAAE,UAFiB;AAG3BI,gBAAAA,IAAI,EAAE,KAHqB;AAI3BF,gBAAAA,SAAS,EAAC;AAJiB,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBALA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHE,eAuBF;AAAK,QAAA,KAAK,EAAE;AAEVF,UAAAA,QAAQ,EAAE,UAFA;AAGVI,UAAAA,IAAI,EAAE,KAHI;AAIVC,UAAAA,GAAG,EAAC;AAJM,SAAZ;AAAA,+BAOK,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAPL;AAAA;AAAA;AAAA;AAAA,cAvBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CAzCH;;KAAMN,U;;AA2CJ,SAASO,KAAT,GAAgB;AAIf,MAAIC,OAAO,GAAC,EAAZ,CAJe,CAKf;;AACA,MAAIC,QAAQ,GAAC,EAAb;;AACA,OAAI,IAAIC,KAAK,GAAC,CAAd,EAAgBA,KAAK,GAACf,IAAI,CAACgB,MAA3B,EAAkCD,KAAK,EAAvC,EAA0C;AACzC;AACAD,IAAAA,QAAQ,CAACG,IAAT,CAAcjB,IAAI,CAACe,KAAD,CAAJ,CAAYG,IAA1B;AACA;;AACD,OAAI,IAAIH,KAAK,GAAC,CAAd,EAAgBA,KAAK,GAACf,IAAI,CAACgB,MAA3B,EAAkCD,KAAK,EAAvC,EAA0C;AAGzC,QAAII,cAAc,CAACL,QAAD,EAAUd,IAAI,CAACe,KAAD,CAAJ,CAAYG,IAAtB,EAA2BH,KAA3B,CAAlB,EAAoD,CAClD;;AACD;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMK,KA9DD,MA+DI;AACF,UAAGf,IAAI,CAACe,KAAD,CAAJ,CAAYK,KAAZ,KAAoB,CAAvB,EAAyB;AACvB;AACAP,QAAAA,OAAO,CAACI,IAAR,CAAajB,IAAI,CAACe,KAAD,CAAJ,CAAYG,IAAzB;AACAL,QAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AAID,OAPD,MAQI;AACF;AACA,YAAII,OAAO,GAACrB,IAAI,CAACe,KAAD,CAAJ,CAAYG,IAAZ,CAAiBI,OAAjB,CAAyBtB,IAAI,CAACe,KAAD,CAAJ,CAAYQ,IAArC,CAAZ;AACA,YAAIC,EAAE,GAAC,eAAaxB,IAAI,CAACe,KAAD,CAAJ,CAAYK,KAAhC;AACAP,QAAAA,OAAO,CAACI,IAAR,CAAajB,IAAI,CAACe,KAAD,CAAJ,CAAYG,IAAZ,CAAiBO,SAAjB,CAA2B,CAA3B,EAA6BJ,OAA7B,CAAb;AACAR,QAAAA,OAAO,CAACI,IAAR,eAAa;AAAM,UAAA,EAAE,EAAEO,EAAV;AAAA,oBAAexB,IAAI,CAACe,KAAD,CAAJ,CAAYQ;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAAb;AACAV,QAAAA,OAAO,CAACI,IAAR,CAAajB,IAAI,CAACe,KAAD,CAAJ,CAAYG,IAAZ,CAAiBO,SAAjB,CAA2BJ,OAAO,GAACrB,IAAI,CAACe,KAAD,CAAJ,CAAYQ,IAAZ,CAAiBP,MAApD,CAAb;AACAH,QAAAA,OAAO,CAACI,IAAR,CAAa,GAAb,EAPE,CASF;AAID;AACF;AAEF;AACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,SAAOJ,OAAP;AACD;;AACD,SAASJ,MAAT,GAAiB;AACf,MAAIiB,WAAW,GAAC,EAAhB;AACA,MAAIC,KAAK,GAAC,EAAV;AACA,MAAIC,GAAG,GAAC,EAAR;;AACA,OAAI,IAAIC,CAAR,IAAa7B,IAAI,CAAC8B,gBAAlB,EAAmC;AACjCJ,IAAAA,WAAW,CAACT,IAAZ,CAAiBY,CAAjB;AACD,GANc,CAOhB;;;AAEC,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,WAAW,CAACV,MAA1B,EAAiCe,CAAC,EAAlC,EAAqC;AAC/B,SAAI,IAAIC,CAAR,IAAahC,IAAI,CAAC8B,gBAAL,CAAsBJ,WAAW,CAACK,CAAD,CAAjC,CAAb,EAAmD;AACjDJ,MAAAA,KAAK,CAACV,IAAN,CAAW,IAAIb,IAAJ,CAASJ,IAAI,CAAC8B,gBAAL,CAAsBJ,WAAW,CAACK,CAAD,CAAjC,EAAsCC,CAAtC,EAAyCT,IAAlD,EAAuDvB,IAAI,CAAC8B,gBAAL,CAAsBJ,WAAW,CAACK,CAAD,CAAjC,EAAsCC,CAAtC,EAAyCC,UAAhG,EAA2GjC,IAAI,CAAC8B,gBAAL,CAAsBJ,WAAW,CAACK,CAAD,CAAjC,EAAsCC,CAAtC,EAAyCE,SAApJ,EAA8JlC,IAAI,CAAC8B,gBAAL,CAAsBJ,WAAW,CAACK,CAAD,CAAjC,EAAsCC,CAAtC,EAAyCZ,KAAvM,EAA6MpB,IAAI,CAAC8B,gBAAL,CAAsBJ,WAAW,CAACK,CAAD,CAAjC,EAAsCC,CAAtC,EAAyCG,WAAtP,CAAX;AACAR,MAAAA,KAAK,CAACS,IAAN,CAAW,SAASC,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AAChC;AACA,YAAID,CAAC,CAACE,KAAF,GAASD,CAAC,CAACC,KAAf,EACA,OAAO,CAAC,CAAR;AACH,YAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EACG,OAAO,CAAP;AACH,eAAO,CAAP;AACE,OAPD;AAQD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAAC,CAAD,CAAL,CAASgB,SAArB;AACAhB,IAAAA,KAAK,CAACiB,KAAN,CAAY,CAAZ,EAAejB,KAAK,CAACX,MAArB;AAEAY,IAAAA,GAAG,CAACX,IAAJ,CAASS,WAAW,CAACK,CAAD,CAAX,CAAeN,SAAxB;AAEL,GA1Bc,CA2Bf;;AACD;;AAEC,SAASN,cAAT,CAAwB0B,GAAxB,EAA4BjC,KAA5B,EAAkCG,KAAlC,EAAwC;AACtC,OAAI,IAAIgB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACc,GAAG,CAAC7B,MAAlB,EAAyBe,CAAC,EAA1B,EAA6B;AAC3B,QAAIe,QAAQ,GAACf,CAAC,GAAChB,KAAf;;AACA,QAAG,CAAC+B,QAAQ,KAAG,CAAX,IAAgBA,QAAQ,KAAG,CAAC,CAA7B,KAAkCD,GAAG,CAACd,CAAD,CAAH,KAASnB,KAA9C,EAAoD;AAClD,aAAO,IAAP;AACD;AACF;AAEF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,eAAeP,UAAf","sourcesContent":["import React from 'react';\r\n//import {Reponse} from '../components/textInput'\r\nimport data from \"../json/jsonmock.json\"\r\nimport \"../styles/service1_1.css\"\r\nimport Button from '../components/button';\r\nimport Multiplechkbox from '../components/MultipleChkbox';\r\nimport {Link} from \"react-router-dom\";\r\nimport Span from '../components/span';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Service1_1 = () => {\r\n    return (\r\n      <div\r\n>\r\n        <div>\r\n    \r\n        \r\n      <div id=\"res\" style={{\r\n      position: 'absolute',\r\n      right:'20%',\r\n      marginTop:'-3em'\r\n      }}>{texte2()} \r\n      <div id=\"btn\">\r\n      <Link to=\"/\" ><Button style={{\r\n        \r\n        position: 'relative',\r\n        left: '50%',\r\n        marginTop:'2em'\r\n        \r\n        \r\n      }}>Retour</Button>\r\n      </Link>\r\n      \r\n      </div>\r\n         \r\n\r\n      </div> \r\n      <div style={{\r\n        \r\n        position: 'absolute',\r\n        left: '80%',\r\n        top:'25%',        \r\n        \r\n      }}>\r\n           <Multiplechkbox/>\r\n         </div>\r\n         { /* <mark>test</mark>*/}\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n  };\r\n  \r\n  function texte(){\r\n   \r\n\r\n   \r\n   let tableau=[]\r\n   //let tabSpan=[]\r\n   let tabTexte=[]\r\n   for(let index=0;index<data.length;index++){\r\n    //tabSpan.push(data[index].span);\r\n    tabTexte.push(data[index].text);\r\n   }\r\n   for(let index=0;index<data.length;index++){\r\n    \r\n\r\n    if( duplicateTexte(tabTexte,data[index].text,index)){\r\n      //TOUT CE QUI NE FONCTIONNE PAS\r\n     /* let cpt=1;\r\n      tabSpan.push(data[index].span)\r\n      while(index+cpt<data.length && data[index+cpt].text===data[index].text){\r\n        tabSpan.push(data[index+cpt].span)\r\n        console.log(data[index+cpt].span)\r\n        cpt++;\r\n        console.log(cpt)\r\n\r\n      }\r\n      //Trier le tableau de span A revoir on sait jamais\r\n      tabSpan.sort(function compare(a, b) {\r\n        if (data[index].text.indexOf(a) < data[index].text.indexOf(b) )\r\n           return -1;\r\n        if (data[index].text.indexOf(a) > data[index].text.indexOf(b) )\r\n           return 1;\r\n        return 0;\r\n      }); \r\n      //Traiter chaque span\r\n      let sans_doublons = Array.from(new Set(tabSpan));\r\n\r\n      console.log(\"Sans doublon \")\r\n      console.log(sans_doublons)\r\n      console.log(\"tabSpan \")\r\n      console.log(tabSpan)\r\n     sans_doublons.sort(function compare(a, b) {\r\n        if (data[index].text.indexOf(a) < data[index].text.indexOf(b) )\r\n           return -1;\r\n        if (data[index].text.indexOf(a) > data[index].text.indexOf(b) )\r\n           return 1;\r\n        return 0;\r\n      }); \r\n      let boucle=0;\r\n      let curseur=0;\r\n      //A REVOIR\r\n      while(boucle<sans_doublons.length && curseur<data[index].text.length){\r\n        if(data[index].text.indexOf(sans_doublons[boucle])!==-1){\r\n          tableau.push(data[index].text.substring(curseur,data[index].text.indexOf(sans_doublons[boucle])))\r\n          let id=\"propaganda\"+data[index].label\r\n        tableau.push(<mark id={id}>{sans_doublons[boucle]}</mark>)\r\n        curseur=data[index].text.indexOf(sans_doublons[boucle])+sans_doublons[boucle].length\r\n        }\r\n        //IF ICI\r\n        if(index===3){\r\n          //console.log(sans_doublons)\r\n        }\r\n        \r\n        console.log(curseur)\r\n        boucle++;\r\n      }\r\n      \r\n      tableau.push(data[index].text.substring(curseur,data[index].text.length))\r\n\r\n\r\n      console.log(data[index].text)\r\n      console.log(sans_doublons)\r\n      tabSpan.slice(0, tabSpan.length);\r\n      sans_doublons.slice(0, sans_doublons.length);\r\n      index=index+cpt+1;\r\n\r\n       */\r\n    }\r\n    else{\r\n      if(data[index].label===0){\r\n        //Pas de propagande\r\n        tableau.push(data[index].text)\r\n        tableau.push(\" \");\r\n\r\n\r\n\r\n      }\r\n      else{\r\n        //Un mot de propagande en une phrase\r\n        let curseur=data[index].text.indexOf(data[index].span);\r\n        let id=\"propaganda\"+data[index].label\r\n        tableau.push(data[index].text.substring(0,curseur));\r\n        tableau.push(<mark id={id}>{data[index].span}</mark>)\r\n        tableau.push(data[index].text.substring(curseur+data[index].span.length));\r\n        tableau.push(\" \");\r\n\r\n        //console.log(data[index].text.substring(0,curseur))\r\n\r\n\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n /* let tab=[]\r\n  tab.push(data[0].text);\r\n\r\n  for(let i=1;i<data.length;i++){\r\n    if(data[i].text!==data[i-1].text)\r\n    tab.push(data[i].text);\r\n  }\r\n  return tab*/\r\n  return tableau;\r\n}\r\nfunction texte2(){\r\n  let propagandas=[]\r\n  let spans=[]\r\n  let res=[]\r\n  for(let l in data.article701225819){\r\n    propagandas.push(l)\r\n  }\r\n // console.log(data.article701225819[propagandas[0]][\"span_1\"].probability);\r\n\r\n  for(let i=0;i<propagandas.length;i++){\r\n        for(let j in data.article701225819[propagandas[i]]){\r\n          spans.push(new Span(data.article701225819[propagandas[i]][j].span,data.article701225819[propagandas[i]][j].start_char,data.article701225819[propagandas[i]][j].end_index,data.article701225819[propagandas[i]][j].label,data.article701225819[propagandas[i]][j].probability));\r\n          spans.sort(function compare(a, b) {\r\n            //console.log(a.start_char,b.start_char)\r\n            if (a.begin< b.begin )\r\n            return -1;\r\n         if (a.begin > b.begin )\r\n            return 1;\r\n         return 0;\r\n          }); \r\n        }\r\n        console.log(spans[0].texteSpan)\r\n        spans.slice(0, spans.length);\r\n\r\n        res.push(propagandas[i].substring)\r\n\r\n  }\r\n  //console.log(data[0].span_1)\r\n}\r\n\r\n  function duplicateTexte(tab,texte,index){\r\n    for(let i=0;i<tab.length;i++){\r\n      let approche=i-index;\r\n      if((approche===1 || approche===-1 )&&tab[i]===texte){\r\n        return true;\r\n      }\r\n    }\r\n  \r\n  }\r\n  \r\n  /*function duplicateSpan(tab,span){\r\n    for(let i=0;i<tab.length;i++){\r\n      if(tab[i]===span){\r\n        return true;\r\n      }\r\n    }\r\n   \r\n  }*/\r\n\r\n  export default Service1_1;\r\n"]},"metadata":{},"sourceType":"module"}