{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dofla\\\\Desktop\\\\Stage\\\\propaganda\\\\src\\\\pages\\\\service2_1.js\";\nimport React from 'react'; //import {Reponse} from '../components/textInput'\n\nimport data from \"../json/jsonmockV4.json\";\nimport Button from '../components/button';\nimport Multiplechkbox from '../components/MultipleChkbox2';\nimport { Link } from \"react-router-dom\";\nimport WordCloud from \"@nhuson/react-d3-cloud\";\nimport Cloud from 'react-wordcloud';\nimport \"tippy.js/dist/tippy.css\";\nimport \"tippy.js/animations/scale.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var word = [];\n\nconst fontSizeMapper = word => Math.log2(word.value) * 5; //const rotate = word => word.value % 360;\n\n\nconst Service2_1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Datacloud(), /*#__PURE__*/_jsxDEV(WordCloud, {\n      data: word,\n      fontSizeMapper: fontSizeMapper // rotate={rotate}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: '80%',\n        top: '20%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Multiplechkbox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Service2_1;\n\nfunction remove1(word) {\n  word.splice(0, 1);\n}\n\nfunction Datacloud() {\n  word = [];\n  let propagandas = [\"Appeal_to_Authority\", \"Appeal_to_fear-prejudice\", \"Bandwagon,Reductio_ad_hitlerum\", \"Black-and-White_Fallacy\", \"Causal_Oversimplification\", \"Doubt\", \"Exaggeration,Minimisation\", \"Flag-Waving\", \"Loaded_Language\", \"Name_Calling,Labeling\", \"Repetition\", \"Slogans\", \"Thought-terminating_Cliches\", \"Whataboutism,Straw_Men,Red_Herring\"];\n  let spans = [];\n  let res = []; // let taillePropaganda=0;\n\n  let tailleSpan = 0;\n  let text = \"\";\n\n  for (let i in data.article701225819) {\n    for (let j in data.article701225819[i]) {\n      if (j !== 'text') {\n        /*console.log(\"type of \"+typeof(data.article701225819[i][j].label))\r\n        console.log(\"texte \"+data.article701225819[i][j].span)\r\n        console.log(\"i \"+i)\r\n        console.log(\"j \"+j+1)*/\n        if (typeof data.article701225819[i][j].label !== 'object') {\n          // console.log(\"test\")\n          if (data.article701225819[i][j].label !== 0) {\n            let spanCourant = {};\n            spanCourant.text = data.article701225819[i][j].span;\n            spanCourant.value = data.article701225819[i][j].probability;\n            spanCourant.label = data.article701225819[i][j].label;\n            spans.push(spanCourant);\n          }\n        } else {\n          for (let v = 0; v < data.article701225819[i][j].label.length; v++) {\n            let spanCourant = {};\n            spanCourant.text = data.article701225819[i].text.substring(data.article701225819[i][j].start_char[v], data.article701225819[i][j].end_index[v]);\n            spanCourant.value = data.article701225819[i][j].probability[v];\n            spanCourant.label = data.article701225819[i][j].label[v];\n            spans.push(spanCourant);\n          }\n        }\n      }\n    }\n  }\n\n  let colors = [\"yellow\", \"red\", \"green\", \"magenta\", \"maroon\", \"sienna\", \"orange\", \"lime\", \"#9B5D9B\", \"aqua\", \"pink\", \"#8486D4\", \"#5A6309\", \"#D1C1F0\"];\n\n  for (let i = 0; i < spans.length; i++) {\n    word.push({\n      text: spans[i].text,\n      value: spans[i].value * 100,\n      color: colors[spans[i].label - 1]\n    });\n  }\n\n  console.log(word); // console.log(data.article701225819[propagandas[0]][\"span_1\"].probability);\n  //console.log(data[0].span_1)\n}\n/*function SimpleWordcloud() {\r\n  const words = [\r\n    {\r\n      text: 'told',\r\n      value: 640,\r\n    },\r\n    {\r\n      text: 'mistake',\r\n      value: 700,\r\n    },\r\n    {\r\n      text: 'thought',\r\n      value: 890,\r\n    },\r\n    {\r\n      text: 'bad',\r\n      value: 1090,\r\n    },\r\n  ]\r\n  const callbacks = {\r\n    getWordColor: word => word.value > 50 ? \"blue\" : \"red\",\r\n    onWordClick: console.log,\r\n    onWordMouseOver: console.log,\r\n    getWordTooltip: word => `${word.text} (${word.value}) [${word.value > 50 ? \"good\" : \"bad\"}]`,\r\n  }\r\n  const options = {\r\n    rotations: 2,\r\n    rotationAngles: [-90, 0],\r\n  };\r\n  //const size = [600, 400];\r\n   \r\n  \r\n  //let words=Datacloud()\r\n  return <ReactWordcloud  callbacks={callbacks}\r\n  options={options}\r\n  words={words} />\r\n}*/\n\n\n_c2 = Datacloud;\nexport default Service2_1;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Service2_1\");\n$RefreshReg$(_c2, \"Datacloud\");","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/src/pages/service2_1.js"],"names":["React","data","Button","Multiplechkbox","Link","WordCloud","Cloud","word","fontSizeMapper","Math","log2","value","Service2_1","Datacloud","position","left","top","remove1","splice","propagandas","spans","res","tailleSpan","text","i","article701225819","j","label","spanCourant","span","probability","push","v","length","substring","start_char","end_index","colors","color","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import {Reponse} from '../components/textInput'\r\nimport data from \"../json/jsonmockV4.json\"\r\nimport Button from '../components/button';\r\nimport Multiplechkbox from '../components/MultipleChkbox2';\r\nimport {Link} from \"react-router-dom\";\r\nimport WordCloud from \"@nhuson/react-d3-cloud\";\r\nimport Cloud from 'react-wordcloud';\r\n\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport \"tippy.js/animations/scale.css\";\r\n\r\n\r\nexport var word = [\r\n \r\n];\r\nconst fontSizeMapper = word => Math.log2(word.value) * 5;\r\n//const rotate = word => word.value % 360;\r\n\r\nconst Service2_1 = () => {\r\n    return (\r\n      <div>\r\n       {Datacloud()}\r\n        \r\n<WordCloud\r\n    data={word}\r\n    fontSizeMapper={fontSizeMapper}\r\n    \r\n   // rotate={rotate}\r\n  />  \r\n   <div style={{\r\n        \r\n        position: 'absolute',\r\n        left: '80%', \r\n        top:'20%'     \r\n        \r\n      }}>\r\n        <Multiplechkbox/>\r\n </div>\r\n\r\n  </div>  );\r\n  };\r\n  \r\n function remove1(word){\r\nword.splice(0,1)\r\n }\r\nfunction Datacloud(){\r\n  word = [\r\n \r\n  ];\r\n  let propagandas=[\"Appeal_to_Authority\",\"Appeal_to_fear-prejudice\",\"Bandwagon,Reductio_ad_hitlerum\",\"Black-and-White_Fallacy\",\"Causal_Oversimplification\",\"Doubt\",\"Exaggeration,Minimisation\",\"Flag-Waving\",\"Loaded_Language\",\"Name_Calling,Labeling\",\"Repetition\",\"Slogans\",\"Thought-terminating_Cliches\",\"Whataboutism,Straw_Men,Red_Herring\"]\r\n  let spans=[]\r\n  let res=[]\r\n // let taillePropaganda=0;\r\n  let tailleSpan=0;\r\n  let text=\"\"\r\n  for(let i in data.article701225819){\r\n\r\n    for(let j in data.article701225819[i]){\r\n        if(j!=='text'){\r\n\r\n        \r\n      /*console.log(\"type of \"+typeof(data.article701225819[i][j].label))\r\n      console.log(\"texte \"+data.article701225819[i][j].span)\r\n      console.log(\"i \"+i)\r\n      console.log(\"j \"+j+1)*/\r\n   \r\n      if(typeof(data.article701225819[i][j].label)!=='object'){\r\n       // console.log(\"test\")\r\n       if(data.article701225819[i][j].label!==0){\r\n        let spanCourant={};\r\n       spanCourant.text=data.article701225819[i][j].span;\r\n       spanCourant.value=data.article701225819[i][j].probability;\r\n       spanCourant.label=data.article701225819[i][j].label;\r\n\r\n        spans.push(spanCourant)\r\n      }\r\n      }else{\r\n        for(let v=0;v<data.article701225819[i][j].label.length;v++){\r\n\r\n          let spanCourant={};\r\n          spanCourant.text=data.article701225819[i].text.substring(data.article701225819[i][j].start_char[v],data.article701225819[i][j].end_index[v]);\r\n          spanCourant.value=data.article701225819[i][j].probability[v];\r\n          spanCourant.label=data.article701225819[i][j].label[v];\r\n\r\n          spans.push(spanCourant)\r\n        \r\n          \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  }    \r\n  let colors=[\"yellow\",\"red\",\"green\",\"magenta\",\"maroon\",\"sienna\",\"orange\",\"lime\",\"#9B5D9B\",\"aqua\",\"pink\",\"#8486D4\",\"#5A6309\",\"#D1C1F0\"]\r\n\r\n  for(let i=0;i<spans.length;i++){\r\n    word.push({text: spans[i].text,value: spans[i].value*100,color:colors[spans[i].label-1]})\r\n    \r\n\r\n  }\r\n  console.log(word)\r\n  \r\n\r\n // console.log(data.article701225819[propagandas[0]][\"span_1\"].probability);\r\n\r\n        \r\n  //console.log(data[0].span_1)\r\n}\r\n/*function SimpleWordcloud() {\r\n  const words = [\r\n    {\r\n      text: 'told',\r\n      value: 640,\r\n    },\r\n    {\r\n      text: 'mistake',\r\n      value: 700,\r\n    },\r\n    {\r\n      text: 'thought',\r\n      value: 890,\r\n    },\r\n    {\r\n      text: 'bad',\r\n      value: 1090,\r\n    },\r\n  ]\r\n  const callbacks = {\r\n    getWordColor: word => word.value > 50 ? \"blue\" : \"red\",\r\n    onWordClick: console.log,\r\n    onWordMouseOver: console.log,\r\n    getWordTooltip: word => `${word.text} (${word.value}) [${word.value > 50 ? \"good\" : \"bad\"}]`,\r\n  }\r\n  const options = {\r\n    rotations: 2,\r\n    rotationAngles: [-90, 0],\r\n  };\r\n  //const size = [600, 400];\r\n   \r\n  \r\n  //let words=Datacloud()\r\n  return <ReactWordcloud  callbacks={callbacks}\r\n  options={options}\r\n  words={words} />\r\n}*/\r\n\r\n \r\n\r\n \r\n  export default Service2_1;\r\n"]},"metadata":{},"sourceType":"module"}