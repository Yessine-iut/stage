{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar transformCodeBlocks = exports.transformCodeBlocks = function transformCodeBlocks(input) {\n  var codeBlockPattern = /\\`\\`\\`.*\\n([\\s\\S]*?)\\`\\`\\`/g;\n  var matches = void 0;\n\n  var _loop = function _loop() {\n    var block = matches[0];\n    var code = matches[1];\n    var lines = code.split('\\n');\n    lines.map(function (line, i) {\n      if (line) {\n        lines[i] = '    ' + line;\n      }\n    });\n    input = input.replace(block, lines.join('\\n'));\n  };\n\n  while (matches = codeBlockPattern.exec(input)) {\n    _loop();\n  }\n\n  return input;\n};\n\nexports.default = transformCodeBlocks;","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/node_modules/react-mark/lib/helpers/transformCodeBlocks.js"],"names":["Object","defineProperty","exports","value","transformCodeBlocks","input","codeBlockPattern","matches","_loop","block","code","lines","split","map","line","i","replace","join","exec","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAGA,IAAIC,mBAAmB,GAAGF,OAAO,CAACE,mBAAR,GAA8B,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AAC1F,MAAIC,gBAAgB,GAAG,6BAAvB;AACA,MAAIC,OAAO,GAAG,KAAK,CAAnB;;AAEA,MAAIC,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3B,QAAIC,KAAK,GAAGF,OAAO,CAAC,CAAD,CAAnB;AACA,QAAIG,IAAI,GAAGH,OAAO,CAAC,CAAD,CAAlB;AACA,QAAII,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAZ;AAEAD,IAAAA,KAAK,CAACE,GAAN,CAAU,UAAUC,IAAV,EAAgBC,CAAhB,EAAmB;AAC3B,UAAID,IAAJ,EAAU;AACRH,QAAAA,KAAK,CAACI,CAAD,CAAL,GAAW,SAASD,IAApB;AACD;AACF,KAJD;AAMAT,IAAAA,KAAK,GAAGA,KAAK,CAACW,OAAN,CAAcP,KAAd,EAAqBE,KAAK,CAACM,IAAN,CAAW,IAAX,CAArB,CAAR;AACD,GAZD;;AAcA,SAAOV,OAAO,GAAGD,gBAAgB,CAACY,IAAjB,CAAsBb,KAAtB,CAAjB,EAA+C;AAC7CG,IAAAA,KAAK;AACN;;AAED,SAAOH,KAAP;AACD,CAvBD;;AAyBAH,OAAO,CAACiB,OAAR,GAAkBf,mBAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar transformCodeBlocks = exports.transformCodeBlocks = function transformCodeBlocks(input) {\n  var codeBlockPattern = /\\`\\`\\`.*\\n([\\s\\S]*?)\\`\\`\\`/g;\n  var matches = void 0;\n\n  var _loop = function _loop() {\n    var block = matches[0];\n    var code = matches[1];\n    var lines = code.split('\\n');\n\n    lines.map(function (line, i) {\n      if (line) {\n        lines[i] = '    ' + line;\n      }\n    });\n\n    input = input.replace(block, lines.join('\\n'));\n  };\n\n  while (matches = codeBlockPattern.exec(input)) {\n    _loop();\n  }\n\n  return input;\n};\n\nexports.default = transformCodeBlocks;"]},"metadata":{},"sourceType":"script"}