{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.testReset = testReset;\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n/* eslint-disable camelcase */\n// This variable will be true once the server-side hydration is completed.\n\n\nvar hydrationCompleted = false;\n\nfunction useMounted() {\n  var mountedRef = _react.default.useRef(false);\n\n  _react.default.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  return mountedRef.current;\n}\n\nfunction unstable_useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var query = queryInput.replace('@media ', '');\n  var _options$defaultMatch = options.defaultMatches,\n      defaultMatchesInput = _options$defaultMatch === void 0 ? false : _options$defaultMatch,\n      _options$noSsr = options.noSsr,\n      noSsr = _options$noSsr === void 0 ? false : _options$noSsr,\n      _options$ssrMatchMedi = options.ssrMatchMedia,\n      ssrMatchMedia = _options$ssrMatchMedi === void 0 ? null : _options$ssrMatchMedi;\n  var defaultMatches = defaultMatchesInput;\n  var mounted = useMounted();\n\n  if (mounted) {// Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n  } else if (hydrationCompleted || noSsr) {\n    defaultMatches = window.matchMedia(query).matches;\n  } else if (ssrMatchMedia) {\n    defaultMatches = ssrMatchMedia(query).matches;\n  } // Early exit for server-side rendering performance.\n\n  /* istanbul ignore if */\n\n\n  if (typeof window === 'undefined') {\n    return defaultMatches;\n  }\n\n  var _React$useState = _react.default.useState(defaultMatches),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      matches = _React$useState2[0],\n      setMatches = _React$useState2[1];\n\n  _react.default.useEffect(function () {\n    hydrationCompleted = true;\n    var queryList = window.matchMedia(query);\n\n    if (matches !== queryList.matches) {\n      setMatches(queryList.matches);\n    }\n\n    function handleMatchesChange(event) {\n      setMatches(event.matches);\n    }\n\n    queryList.addListener(handleMatchesChange);\n    return function () {\n      queryList.removeListener(handleMatchesChange);\n    };\n  }, [query]);\n\n  return matches;\n}\n\nfunction testReset() {\n  hydrationCompleted = false;\n}\n\nvar _default = unstable_useMediaQuery;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/node_modules/@material-ui/core/useMediaQuery/unstable_useMediaQuery.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","testReset","default","_slicedToArray2","_react","hydrationCompleted","useMounted","mountedRef","useRef","useEffect","current","unstable_useMediaQuery","queryInput","options","arguments","length","undefined","query","replace","_options$defaultMatch","defaultMatches","defaultMatchesInput","_options$noSsr","noSsr","_options$ssrMatchMedi","ssrMatchMedia","mounted","window","matchMedia","matches","_React$useState","useState","_React$useState2","setMatches","queryList","handleMatchesChange","event","addListener","removeListener","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.testReset = testReset;\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\n/* eslint-disable camelcase */\n// This variable will be true once the server-side hydration is completed.\nvar hydrationCompleted = false;\n\nfunction useMounted() {\n  var mountedRef = _react.default.useRef(false);\n\n  _react.default.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  return mountedRef.current;\n}\n\nfunction unstable_useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var query = queryInput.replace('@media ', '');\n  var _options$defaultMatch = options.defaultMatches,\n      defaultMatchesInput = _options$defaultMatch === void 0 ? false : _options$defaultMatch,\n      _options$noSsr = options.noSsr,\n      noSsr = _options$noSsr === void 0 ? false : _options$noSsr,\n      _options$ssrMatchMedi = options.ssrMatchMedia,\n      ssrMatchMedia = _options$ssrMatchMedi === void 0 ? null : _options$ssrMatchMedi;\n  var defaultMatches = defaultMatchesInput;\n  var mounted = useMounted();\n\n  if (mounted) {// Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n  } else if (hydrationCompleted || noSsr) {\n    defaultMatches = window.matchMedia(query).matches;\n  } else if (ssrMatchMedia) {\n    defaultMatches = ssrMatchMedia(query).matches;\n  } // Early exit for server-side rendering performance.\n\n  /* istanbul ignore if */\n\n\n  if (typeof window === 'undefined') {\n    return defaultMatches;\n  }\n\n  var _React$useState = _react.default.useState(defaultMatches),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      matches = _React$useState2[0],\n      setMatches = _React$useState2[1];\n\n  _react.default.useEffect(function () {\n    hydrationCompleted = true;\n    var queryList = window.matchMedia(query);\n\n    if (matches !== queryList.matches) {\n      setMatches(queryList.matches);\n    }\n\n    function handleMatchesChange(event) {\n      setMatches(event.matches);\n    }\n\n    queryList.addListener(handleMatchesChange);\n    return function () {\n      queryList.removeListener(handleMatchesChange);\n    };\n  }, [query]);\n\n  return matches;\n}\n\nfunction testReset() {\n  hydrationCompleted = false;\n}\n\nvar _default = unstable_useMediaQuery;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}