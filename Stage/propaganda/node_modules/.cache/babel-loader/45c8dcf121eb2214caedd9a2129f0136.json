{"ast":null,"code":"class Span {\n  constructor(texteSpan, begin, end, label, probability) {\n    this.begin = 0;\n    this.end = 0;\n    this.probability = 0;\n    this.texteSpan = \"\";\n    this.label = 0;\n    this.texteSpan = texteSpan;\n    this.begin = begin;\n    this.end = end;\n    this.label = label;\n    this.probability = probability; //this.span=span\n\n    /*this.debut=debut;\r\n    this.fin=fin*/\n  }\n\n  static overlap(span1, span2) {\n    if (span1.begin >= span2.begin && span1.end <= span2.end || span1.end >= span2.begin && span1.end <= span2.end) {\n      return true;\n    } else if (span2.begin >= span1.begin && span2.end <= span1.end || span2.end >= span1.begin && span2.end <= span1.end) {\n      return true;\n    }\n\n    return false;\n  }\n  /*getText(Reponse){\r\n      let numero=Reponse.toString().indexOf(this.debut);\r\n      let numero2=Reponse.toString().indexOf(this.fin)+this.fin.length;\r\n      let marque=\"\";\r\n  \r\n      for(let i=numero;i<numero2;i++){\r\n         //console.log(Reponse.toString().charAt(i))\r\n         marque=marque+Reponse.toString().charAt(i).toString();\r\n         }\r\n         return marque;\r\n  }*/\n\n\n}\n\nexport default Span;","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/src/components/span.js"],"names":["Span","constructor","texteSpan","begin","end","label","probability","overlap","span1","span2"],"mappings":"AAEA,MAAMA,IAAN,CAAU;AAOLC,EAAAA,WAAW,CAACC,SAAD,EAAWC,KAAX,EAAiBC,GAAjB,EAAqBC,KAArB,EAA2BC,WAA3B,EAAuC;AAAA,SANnDH,KAMmD,GAN7C,CAM6C;AAAA,SALnDC,GAKmD,GAL/C,CAK+C;AAAA,SAJnDE,WAImD,GAJvC,CAIuC;AAAA,SAHnDJ,SAGmD,GAHzC,EAGyC;AAAA,SAFnDG,KAEmD,GAF7C,CAE6C;AAC9C,SAAKH,SAAL,GAAeA,SAAf;AACA,SAAKC,KAAL,GAAWA,KAAX;AACA,SAAKC,GAAL,GAASA,GAAT;AACA,SAAKC,KAAL,GAAWA,KAAX;AACA,SAAKC,WAAL,GAAiBA,WAAjB,CAL8C,CAM9C;;AACA;AACT;AACM;;AAEa,SAAPC,OAAO,CAACC,KAAD,EAAOC,KAAP,EAAa;AACxB,QAAID,KAAK,CAACL,KAAN,IAAaM,KAAK,CAACN,KAAnB,IAA4BK,KAAK,CAACJ,GAAN,IAAWK,KAAK,CAACL,GAA9C,IAAuDI,KAAK,CAACJ,GAAN,IAAWK,KAAK,CAACN,KAAjB,IAA0BK,KAAK,CAACJ,GAAN,IAAWK,KAAK,CAACL,GAArG,EAA0G;AACtG,aAAO,IAAP;AACH,KAFD,MAEM,IAAIK,KAAK,CAACN,KAAN,IAAaK,KAAK,CAACL,KAAnB,IAA4BM,KAAK,CAACL,GAAN,IAAWI,KAAK,CAACJ,GAA9C,IAAuDK,KAAK,CAACL,GAAN,IAAWI,KAAK,CAACL,KAAjB,IAA0BM,KAAK,CAACL,GAAN,IAAWI,KAAK,CAACJ,GAArG,EAA0G;AAC5G,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACF;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AApCU;;AAuCN,eAAeJ,IAAf","sourcesContent":["\r\n\r\nclass Span{\r\n    begin=0;\r\n    end=0;\r\n    probability=0;\r\n    texteSpan=\"\";\r\n    label=0;\r\n    \r\n     constructor(texteSpan,begin,end,label,probability){\r\n         this.texteSpan=texteSpan\r\n         this.begin=begin;\r\n         this.end=end;\r\n         this.label=label;\r\n         this.probability=probability\r\n         //this.span=span\r\n         /*this.debut=debut;\r\n         this.fin=fin*/\r\n     }\r\n    \r\n     static overlap(span1,span2){\r\n        if((span1.begin>=span2.begin && span1.end<=span2.end) || (span1.end>=span2.begin && span1.end<=span2.end)){\r\n            return true;\r\n        }else if((span2.begin>=span1.begin && span2.end<=span1.end) || (span2.end>=span1.begin && span2.end<=span1.end)){\r\n            return true;\r\n        }\r\n        return false;\r\n     }\r\n    /*getText(Reponse){\r\n        let numero=Reponse.toString().indexOf(this.debut);\r\n        let numero2=Reponse.toString().indexOf(this.fin)+this.fin.length;\r\n        let marque=\"\";\r\n    \r\n        for(let i=numero;i<numero2;i++){\r\n           //console.log(Reponse.toString().charAt(i))\r\n           marque=marque+Reponse.toString().charAt(i).toString();\r\n           }\r\n           return marque;\r\n    }*/\r\n    \r\n    }\r\n    export default Span;"]},"metadata":{},"sourceType":"module"}