{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dofla\\\\Desktop\\\\Stage\\\\propaganda\\\\src\\\\pages\\\\about.js\";\nimport \"../styles/about.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"h1\",\n        style: {\n          marginBottom: \"40px\",\n          fontFamily: \"Georgia\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n            width: \"70%\",\n            margin: \"0 auto\"\n            /*marginLeft:\"220px\"*/\n\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"snippets\",\n            style: {\n              fontFamily: \"Georgia\"\n            },\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"test\",\n            style: {\n              textAlign: \"center\",\n              fontSize: \"20px\",\n              marginRight: \"10%\",\n              marginLeft: \"10%\",\n              textShadow: \"none\",\n              paddingBottom: \"20px\"\n            }\n            /*style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginBottom: \"6%\",\r\n            fontSize:'25px',\r\n            }}*/\n            ,\n            children: \"\\\"Disinformation is spreading online through news, social media and etc. Based on NLP techniques, we explore such disinformation via rhetorical, psychological and strategies to detect such propaganda text.\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: \"2%\",\n          marginRight: \"2%\"\n        },\n        children: \"One of the mechanisms through which disinformation is spreading online, in particular through social media, is by employing propaganda techniques. These include specific rhetorical and psychological strategies, ranging from leveraging on emotions to exploiting logical fallacies. We adopt a supervised approach (i.e., BERT and RoBERTa Transformer-based models) to classify textual snippets both as propaganda messages and according to the precise applied propaganda technique, as well as a detailed linguistic analysis of the features characterising propaganda information in text (e.g., semantic, sentiment and argumentation features). We provide two automatized services concerning propaganda snippets in our detection system.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"20px\",\n          marginLeft: \"2%\",\n          textDecoration: \"underline\",\n          backgroundColor: \"white\",\n          textAlign: \"center\",\n          marginTop: \"50px\"\n        },\n        children: \"Propaganda Snippets Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: \"2%\",\n          marginRight: \"2%\"\n        },\n        children: \"We let users freely input a text to employ our supervised system to display precisely propaganda snippets if it exists in the text, along with (multiple) probability of propaganda technique used. Users can also download their outputs as a JSON file for academic usages.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"20px\",\n          marginLeft: \"2%\",\n          textDecoration: \"underline\",\n          backgroundColor: \"white\",\n          textAlign: \"center\",\n          marginTop: \"50px\"\n        },\n        children: \"Propaganda Word Clouds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: \"2%\",\n          marginRight: \"2%\"\n        },\n        children: [\" \", \"We employ our supervised system to display word clouds from a free text. Users can observe easily the most important snippets regarding its propaganda techniques and probabilities.\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: \"2%\",\n          marginRight: \"2%\"\n        },\n        children: [\"Our system consists of two processes which employ a supervised approach to proceed the prediction at sentence-level. We firstly detect the propaganda snippets of the given input as our first step, where in this process we obtain 0.88 macro F1-score. As the last part of our system, we employ a supervised classifier to perform a classification on 14 propaganda techniques [1]. The result of this part of our system obtains in average of all techniques is of ~0.90 macro F1-score. Our system was trained and tested based on academic-used resources from two computational linguistic workshops namely,\", /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"linkColor\",\n          href: \"https://propaganda.qcri.org/nlp4if-shared-task/\",\n          children: [\" \", \"NLP4IF\\u20192019\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), \", and\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"linkColor\",\n          href: \"https://propaganda.qcri.org/ptc/index.html\",\n          children: \"SemEval2020 Task-11\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: \"2%\",\n          marginRight: \"2%\"\n        },\n        children: \"[1] List of propaganda techniques in this work.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          marginLeft: \"2%\",\n          marginRight: \"2%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Appeal_to_Authority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Appeal_to_fear-prejudice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Bandwagon,Reductio_ad_hitlerum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Black-and-White_Fallacy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Causal_Oversimplification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Doubt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Exaggeration,Minimisation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Flag-Waving\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Loaded_Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Name_Calling,Labeling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Repetition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Slogans\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Thought-terminating_Cliches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Whataboutism,Straw_Men,Red_Herring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/src/pages/about.js"],"names":["About","marginBottom","fontFamily","backgroundColor","width","margin","textAlign","fontSize","marginRight","marginLeft","textShadow","paddingBottom","textDecoration","marginTop"],"mappings":"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","sourcesContent":["\r\nimport \"../styles/about.css\";\r\n\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <div style={{}}>\r\n        <div id=\"h1\" style={{ marginBottom: \"40px\", fontFamily: \"Georgia\" }}>\r\n          <div\r\n            style={{\r\n              backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n              width: \"70%\",\r\n              margin: \"0 auto\" /*marginLeft:\"220px\"*/,\r\n            }}\r\n          >\r\n            <h1\r\n              className=\"snippets\"\r\n              style={{ fontFamily: \"Georgia\" }}\r\n            >\r\n              About\r\n            </h1>\r\n\r\n            <h2\r\n              className=\"test\"\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: \"20px\",\r\n                marginRight: \"10%\",\r\n                marginLeft: \"10%\",\r\n                textShadow: \"none\",\r\n                paddingBottom: \"20px\",\r\n              }} /*style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginBottom: \"6%\",\r\n            fontSize:'25px',\r\n          }}*/\r\n            >\r\n              \"Disinformation is spreading online through news, social media and\r\n              etc. Based on NLP techniques, we explore such disinformation via\r\n              rhetorical, psychological and strategies to detect such propaganda\r\n              text.\"\r\n            </h2>\r\n          </div>\r\n        </div>\r\n\r\n        <p style={{ marginLeft: \"2%\", marginRight: \"2%\" }}>\r\n          One of the mechanisms through which disinformation is spreading\r\n          online, in particular through social media, is by employing propaganda\r\n          techniques. These include specific rhetorical and psychological\r\n          strategies, ranging from leveraging on emotions to exploiting logical\r\n          fallacies. We adopt a supervised approach (i.e., BERT and RoBERTa\r\n          Transformer-based models) to classify textual snippets both as\r\n          propaganda messages and according to the precise applied propaganda\r\n          technique, as well as a detailed linguistic analysis of the features\r\n          characterising propaganda information in text (e.g., semantic,\r\n          sentiment and argumentation features). We provide two automatized\r\n          services concerning propaganda snippets in our detection system.\r\n        </p>\r\n        <h2\r\n          style={{\r\n            fontSize: \"20px\",\r\n            marginLeft: \"2%\",\r\n            textDecoration: \"underline\",\r\n            backgroundColor: \"white\",\r\n            textAlign: \"center\",\r\n            marginTop: \"50px\",\r\n          }}\r\n        >\r\n          Propaganda Snippets Detection\r\n        </h2>\r\n        <p style={{ marginLeft: \"2%\", marginRight: \"2%\" }}>\r\n          We let users freely input a text to employ our supervised system to\r\n          display precisely propaganda snippets if it exists in the text, along\r\n          with (multiple) probability of propaganda technique used. Users can\r\n          also download their outputs as a JSON file for academic usages.\r\n        </p>\r\n        <h2\r\n          style={{\r\n            fontSize: \"20px\",\r\n            marginLeft: \"2%\",\r\n            textDecoration: \"underline\",\r\n            backgroundColor: \"white\",\r\n            textAlign: \"center\",\r\n            marginTop: \"50px\",\r\n          }}\r\n        >\r\n          Propaganda Word Clouds\r\n        </h2>\r\n        <p style={{ marginLeft: \"2%\", marginRight: \"2%\" }}>\r\n          {\" \"}\r\n          We employ our supervised system to display word clouds from a free\r\n          text. Users can observe easily the most important snippets regarding\r\n          its propaganda techniques and probabilities.{\" \"}\r\n        </p>\r\n        <p style={{ marginLeft: \"2%\", marginRight: \"2%\" }}>\r\n          Our system consists of two processes which employ a supervised\r\n          approach to proceed the prediction at sentence-level. We firstly\r\n          detect the propaganda snippets of the given input as our first step,\r\n          where in this process we obtain 0.88 macro F1-score. As the last part\r\n          of our system, we employ a supervised classifier to perform a\r\n          classification on 14 propaganda techniques [1]. The result of this\r\n          part of our system obtains in average of all techniques is of ~0.90\r\n          macro F1-score. Our system was trained and tested based on\r\n          academic-used resources from two computational linguistic workshops\r\n          namely,\r\n          <a\r\n            className=\"linkColor\"\r\n            href=\"https://propaganda.qcri.org/nlp4if-shared-task/\"\r\n          >\r\n            {\" \"}\r\n            NLP4IF’2019\r\n          </a>\r\n          , and{\" \"}\r\n          <a\r\n            className=\"linkColor\"\r\n            href=\"https://propaganda.qcri.org/ptc/index.html\"\r\n          >\r\n            SemEval2020 Task-11\r\n          </a>\r\n          .\r\n        </p>\r\n        <p style={{ marginLeft: \"2%\", marginRight: \"2%\" }}>\r\n          [1] List of propaganda techniques in this work.\r\n        </p>\r\n        <ol style={{ marginLeft: \"2%\", marginRight: \"2%\" }}>\r\n          <li>Appeal_to_Authority</li>\r\n          <li>Appeal_to_fear-prejudice</li>\r\n          <li>Bandwagon,Reductio_ad_hitlerum</li>\r\n          <li>Black-and-White_Fallacy</li>\r\n          <li>Causal_Oversimplification</li>\r\n          <li>Doubt</li>\r\n          <li>Exaggeration,Minimisation</li>\r\n          <li>Flag-Waving</li>\r\n          <li>Loaded_Language</li>\r\n          <li>Name_Calling,Labeling</li>\r\n          <li>Repetition</li>\r\n          <li>Slogans</li>\r\n          <li>Thought-terminating_Cliches</li>\r\n          <li>Whataboutism,Straw_Men,Red_Herring</li>\r\n        </ol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"]},"metadata":{},"sourceType":"module"}