{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dofla\\\\Desktop\\\\Stage - Copie (4)\\\\propaganda\\\\src\\\\pages\\\\service1_1.js\";\nimport React from 'react'; //import {Reponse} from '../components/textInput'\n\nimport Propagande from \"../components/propagande\";\nimport data from \"../json/jsonmock.json\";\nimport \"../styles/service1_1.css\";\nimport Button from '../components/button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Service1_1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"res\",\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column'\n        },\n        children: test()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            position: 'absolute',\n            left: '50%'\n          },\n          children: \"Retour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Service1_1;\n\nfunction test() {\n  let tableau = [];\n  let tabSpan = [];\n  let tabTexte = [];\n\n  for (let index = 0; index < data.length; index++) {\n    //tabSpan.push(data[index].span);\n    tabTexte.push(data[index].text);\n  }\n\n  for (let index = 0; index < data.length; index++) {\n    if (duplicateTexte(tabTexte, data[index].text, index)) {\n      //Après entretien\n      let cpt;\n      tabSpan.push(data[index].span);\n\n      while (index + cpt < data.length && data[index + cpt].text === data[index].text) {\n        tabSpan.push(data[index + cpt].span);\n        cpt++;\n      } //Trier le tableau de span A revoir on sait jamais\n\n\n      tabSpan.sort(function compare(a, b) {\n        if (data[index].text.indexOf(a) < data[index].text.indexOf(b)) return -1;\n        if (data[index].text.indexOf(a) > data[index].text.indexOf(b)) return 1;\n        return 0;\n      }); //Traiter chaque span\n      //Avant entretien\n    } else {\n      if (data[index].label === 0) {\n        //Pas de propagande\n        tableau.push(data[index].text);\n      } else {\n        //Un mot de propagande en une phrase\n        let curseur = data[index].text.indexOf(data[index].span);\n        let id = \"propaganda\" + data[index].label;\n        tableau.push(data[index].text.substring(0, curseur));\n        tableau.push( /*#__PURE__*/_jsxDEV(\"mark\", {\n          id: id,\n          children: data[index].span\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 22\n        }, this));\n        tableau.push(data[index].text.substring(curseur + data[index].text.length));\n        console.log(data[index].text.substring(0, curseur));\n      }\n    }\n  }\n\n  return tableau;\n}\n\nfunction duplicateTexte(tab, texte, index) {\n  for (let i = 0; i < tab.length; i++) {\n    let approche = i - index;\n\n    if ((approche === 1 || approche === -1) && tab[i] === texte) {\n      return true;\n    }\n  }\n}\n\nfunction duplicateSpan(tab, span) {\n  let cpt = 0;\n\n  for (let i = 0; i < tab.length; i++) {\n    if (tab[i].span === span) {\n      cpt++;\n    }\n  }\n\n  if (cpt > 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default Service1_1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service1_1\");","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage - Copie (4)/propaganda/src/pages/service1_1.js"],"names":["React","Propagande","data","Button","Service1_1","justifyContent","alignItems","flexDirection","test","position","left","tableau","tabSpan","tabTexte","index","length","push","text","duplicateTexte","cpt","span","sort","compare","a","b","indexOf","label","curseur","id","substring","console","log","tab","texte","i","approche","duplicateSpan"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import {Reponse} from '../components/textInput'\r\nimport Propagande from \"../components/propagande\"\r\nimport data from \"../json/jsonmock.json\"\r\nimport \"../styles/service1_1.css\"\r\nimport Button from '../components/button';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Service1_1 = () => {\r\n    return (\r\n      <div\r\n>\r\n        <div>\r\n        {  /* {Reponse}*/}\r\n        \r\n           <div id=\"res\" style={{\r\n       justifyContent:'center', alignItems:'center',flexDirection:'column'\r\n      }}>{test()}    \r\n\r\n      </div> \r\n      <div id=\"btn\"><Button style={{\r\n        position: 'absolute',\r\n        left: '50%',\r\n      }}>Retour</Button>\r\n      </div>\r\n         { /* <mark>test</mark>*/}\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n  };\r\n  \r\n  function test(){\r\n   \r\n\r\n   \r\n   let tableau=[]\r\n   let tabSpan=[]\r\n   let tabTexte=[]\r\n   for(let index=0;index<data.length;index++){\r\n    //tabSpan.push(data[index].span);\r\n    tabTexte.push(data[index].text);\r\n   }\r\n   for(let index=0;index<data.length;index++){\r\n    \r\n\r\n    if( duplicateTexte(tabTexte,data[index].text,index)){\r\n      //Après entretien\r\n      let cpt;\r\n      tabSpan.push(data[index].span)\r\n      while(index+cpt<data.length && data[index+cpt].text===data[index].text){\r\n        tabSpan.push(data[index+cpt].span)\r\n        cpt++;\r\n      }\r\n      //Trier le tableau de span A revoir on sait jamais\r\n      tabSpan.sort(function compare(a, b) {\r\n        if (data[index].text.indexOf(a) < data[index].text.indexOf(b) )\r\n           return -1;\r\n        if (data[index].text.indexOf(a) > data[index].text.indexOf(b) )\r\n           return 1;\r\n        return 0;\r\n      }); \r\n      //Traiter chaque span\r\n      \r\n\r\n\r\n      //Avant entretien\r\n    }\r\n    else{\r\n      if(data[index].label===0){\r\n        //Pas de propagande\r\n        tableau.push(data[index].text)\r\n\r\n\r\n      }\r\n      else{\r\n        //Un mot de propagande en une phrase\r\n        let curseur=data[index].text.indexOf(data[index].span);\r\n        let id=\"propaganda\"+data[index].label\r\n        tableau.push(data[index].text.substring(0,curseur));\r\n        tableau.push(<mark id={id}>{data[index].span}</mark>)\r\n        tableau.push(data[index].text.substring(curseur+data[index].text.length));\r\n        console.log(data[index].text.substring(0,curseur))\r\n\r\n\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n  return tableau;\r\n}\r\n\r\n  function duplicateTexte(tab,texte,index){\r\n    for(let i=0;i<tab.length;i++){\r\n      let approche=i-index;\r\n      if((approche===1 || approche===-1 )&&tab[i]===texte){\r\n        return true;\r\n      }\r\n    }\r\n  \r\n  }\r\n  function duplicateSpan(tab,span){\r\n    let cpt=0;\r\n    for(let i=0;i<tab.length;i++){\r\n      if(tab[i].span===span){\r\n        cpt++\r\n      }\r\n    }\r\n    if(cpt>1){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n  export default Service1_1;\r\n"]},"metadata":{},"sourceType":"module"}