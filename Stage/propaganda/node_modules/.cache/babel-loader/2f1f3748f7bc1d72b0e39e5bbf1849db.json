{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dofla\\\\Desktop\\\\Stage\\\\propaganda\\\\src\\\\pages\\\\service1_1.js\";\nimport React from 'react'; //import {Reponse} from '../components/textInput'\n\nimport data from \"../json/jsonmockV3.json\";\nimport \"../styles/service1_1.css\";\nimport Button from '../components/button';\nimport Multiplechkbox from '../components/MultipleChkbox';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet spans = [];\n\nconst Service1_1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"res\",\n        style: {\n          position: 'absolute',\n          right: '20%'\n        },\n        children: [texte2(), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"btn\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                position: 'relative',\n                left: '50%',\n                marginTop: '2em'\n              },\n              children: \"Retour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: '80%',\n          top: '25%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Multiplechkbox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Service1_1;\n\nfunction texte() {\n  let tableau = []; //let tabSpan=[]\n\n  let tabTexte = [];\n\n  for (let index = 0; index < data.length; index++) {\n    //tabSpan.push(data[index].span);\n    tabTexte.push(data[index].text);\n  }\n\n  for (let index = 0; index < data.length; index++) {\n    if (duplicateTexte(tabTexte, data[index].text, index)) {//TOUT CE QUI NE FONCTIONNE PAS\n\n      /* let cpt=1;\r\n       tabSpan.push(data[index].span)\r\n       while(index+cpt<data.length && data[index+cpt].text===data[index].text){\r\n         tabSpan.push(data[index+cpt].span)\r\n         console.log(data[index+cpt].span)\r\n         cpt++;\r\n         console.log(cpt)\r\n         }\r\n       //Trier le tableau de span A revoir on sait jamais\r\n       tabSpan.sort(function compare(a, b) {\r\n         if (data[index].text.indexOf(a) < data[index].text.indexOf(b) )\r\n            return -1;\r\n         if (data[index].text.indexOf(a) > data[index].text.indexOf(b) )\r\n            return 1;\r\n         return 0;\r\n       }); \r\n       //Traiter chaque span\r\n       let sans_doublons = Array.from(new Set(tabSpan));\r\n         console.log(\"Sans doublon \")\r\n       console.log(sans_doublons)\r\n       console.log(\"tabSpan \")\r\n       console.log(tabSpan)\r\n      sans_doublons.sort(function compare(a, b) {\r\n         if (data[index].text.indexOf(a) < data[index].text.indexOf(b) )\r\n            return -1;\r\n         if (data[index].text.indexOf(a) > data[index].text.indexOf(b) )\r\n            return 1;\r\n         return 0;\r\n       }); \r\n       let boucle=0;\r\n       let curseur=0;\r\n       //A REVOIR\r\n       while(boucle<sans_doublons.length && curseur<data[index].text.length){\r\n         if(data[index].text.indexOf(sans_doublons[boucle])!==-1){\r\n           tableau.push(data[index].text.substring(curseur,data[index].text.indexOf(sans_doublons[boucle])))\r\n           let id=\"propaganda\"+data[index].label\r\n         tableau.push(<mark id={id}>{sans_doublons[boucle]}</mark>)\r\n         curseur=data[index].text.indexOf(sans_doublons[boucle])+sans_doublons[boucle].length\r\n         }\r\n         //IF ICI\r\n         if(index===3){\r\n           //console.log(sans_doublons)\r\n         }\r\n         \r\n         console.log(curseur)\r\n         boucle++;\r\n       }\r\n       \r\n       tableau.push(data[index].text.substring(curseur,data[index].text.length))\r\n           console.log(data[index].text)\r\n       console.log(sans_doublons)\r\n       tabSpan.slice(0, tabSpan.length);\r\n       sans_doublons.slice(0, sans_doublons.length);\r\n       index=index+cpt+1;\r\n          */\n    } else {\n      if (data[index].label === 0) {\n        //Pas de propagande\n        tableau.push(data[index].text);\n        tableau.push(\" \");\n      } else {\n        //Un mot de propagande en une phrase\n        let curseur = data[index].text.indexOf(data[index].span);\n        let id = \"propaganda\" + data[index].label;\n        tableau.push(data[index].text.substring(0, curseur));\n        tableau.push( /*#__PURE__*/_jsxDEV(\"mark\", {\n          id: id,\n          children: data[index].span\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 22\n        }, this));\n        tableau.push(data[index].text.substring(curseur + data[index].span.length));\n        tableau.push(\" \"); //console.log(data[index].text.substring(0,curseur))\n      }\n    }\n  }\n  /* let tab=[]\r\n   tab.push(data[0].text);\r\n  \n   for(let i=1;i<data.length;i++){\r\n     if(data[i].text!==data[i-1].text)\r\n     tab.push(data[i].text);\r\n   }\r\n   return tab*/\n\n\n  return tableau;\n}\n\nfunction texte2() {\n  let spans = [];\n  let res = [];\n  let taillePropaganda = 0;\n  let tailleSpan = 0;\n  let text = \"\";\n\n  for (let i in data.article701225819) {\n    taillePropaganda++;\n  } //Pour chaque propagande\n\n\n  for (let i = 1; i < taillePropaganda + 1; i++) {\n    for (let j in data.article701225819[\"propaganda_\" + i]) {\n      tailleSpan++;\n    }\n\n    text = data.article701225819[\"propaganda_\" + i].text;\n\n    for (let v = 1; v < tailleSpan; v++) {\n      spans.push(data.article701225819[\"propaganda_\" + i][\"span_\" + v]);\n    }\n\n    spans.sort(function compare(a, b) {\n      if (a.start_char < b.start_char) return -1;\n      if (a.start_char > b.start_char) return 1;\n      return 0;\n    });\n    let curseur = 0;\n\n    for (let v = 0; v < spans.length; v++) {\n      let spanCourant = spans[v];\n      let spanText = spans[v].span; //console.log(spanText)\n      //1 span par phrase\n\n      if (tailleSpan - 1 === 1) {\n        res.push(text.substring(0, spanCourant.start_char));\n        let id = \"propaganda\" + spans[v].label;\n        res.push( /*#__PURE__*/_jsxDEV(\"mark\", {\n          id: id,\n          children: spanText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 18\n        }, this));\n        res.push(text.substring(spanCourant.end_index, text.length) + \" \");\n      } else {\n        //On regarde si Ã§a se chevauche\n        let over = 0;\n\n        if (v + 1 < spans.length) {\n          let spanSuivant = spans[v + 1];\n\n          if (overlap(spanCourant, spanSuivant)) {\n            let SpansOverlap = [];\n            /*SpansOverlap.push(spanCourant)\r\n            SpansOverlap.push(spanSuivant)*/\n\n            let j = v;\n\n            while (j + 1 < spans.length && (overlap(spans[j], spans[j + 1]) || overlap(spanCourant, spans[j + 1]))) {\n              SpansOverlap.push(spans[j]);\n              SpansOverlap.push(spans[j + 1]);\n              j++;\n            }\n\n            SpansOverlap.sort(function compare(a, b) {\n              if (a.start_char < b.start_char) return -1;\n              if (a.start_char > b.start_char) return 1;\n              return 0;\n            }); //console.log(\"CURSEUR \"+curseur)\n\n            intervalles(SpansOverlap, text, res, curseur);\n            v = v + SpansOverlap.length;\n            over = 1;\n          }\n        }\n\n        if (over !== 1) {\n          over = 0;\n          let id = \"propaganda\" + spanCourant.label; //console.log(text.substring(curseur,spanCourant))\n          //console.log(text)\n\n          res.push(text.substring(curseur, spanCourant.start_char));\n          res.push( /*#__PURE__*/_jsxDEV(\"mark\", {\n            id: id,\n            children: spanCourant.span\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 20\n          }, this));\n          curseur = spanCourant.end_index;\n        }\n      }\n    }\n\n    if (tailleSpan - 1 !== 1) {\n      res.push(text.substring(curseur, text.length));\n    }\n\n    curseur = 0;\n    tailleSpan = 0;\n    spans.splice(0, spans.length);\n  }\n\n  return res; // console.log(data.article701225819[propagandas[0]][\"span_1\"].probability);\n  //console.log(data[0].span_1)\n}\n\nfunction duplicateTexte(tab, texte, index) {\n  for (let i = 0; i < tab.length; i++) {\n    let approche = i - index;\n\n    if ((approche === 1 || approche === -1) && tab[i] === texte) {\n      return true;\n    }\n  }\n}\n/*function duplicateSpan(tab,span){\r\n  for(let i=0;i<tab.length;i++){\r\n    if(tab[i]===span){\r\n      return true;\r\n    }\r\n  }\r\n \r\n}*/\n\n\nfunction overlap(span1, span2) {\n  if (span2.start_char >= span1.start_char && span2.start_char <= span1.end_index || span2.end_index >= span1.start_char && span2.end_index <= span1.end_index) {\n    return true;\n  }\n}\n\nfunction intervalles(spans, texte, res, curseur) {\n  let inter = [];\n\n  for (let i = 0; i < spans.length; i++) {\n    inter.push(spans[i].start_char);\n    inter.push(spans[i].end_index);\n  }\n\n  const byValue = (a, b) => a - b;\n\n  const sorted = [...inter].sort(byValue); //console.log(\"TEXTE \"+texte)\n  //console.log(\"TEST2 \"+sorted[0])\n\n  res.push(texte.substring(curseur, sorted[0])); //console.log(\"TEST \"+texte.substring(curseur,spans[0].start_char))\n\n  curseur = sorted[0];\n  let labels1 = [];\n\n  for (let i = 1; i < sorted.length; i++) {\n    labels1 = labels(spans, curseur + 1); //console.log(\"CURSEUR +1 \"+(curseur+1))\n\n    if (labels1.length === 1) {\n      let id = \"propaganda\" + labels1[0];\n\n      if (curseur !== sorted[i]) {\n        res.push( /*#__PURE__*/_jsxDEV(\"mark\", {\n          id: id,\n          labels: labels1,\n          children: texte.substring(curseur, sorted[i])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 18\n        }, this));\n      }\n    } else {\n      let id = \"propaganda\" + 99;\n\n      if (curseur !== sorted[i]) {\n        res.push( /*#__PURE__*/_jsxDEV(\"mark\", {\n          id: id,\n          labels: labels1,\n          children: texte.substring(curseur, sorted[i])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 18\n        }, this));\n      }\n    }\n\n    curseur = sorted[i];\n    labels1.splice(0, labels1.length);\n  }\n\n  labels1 = labels(spans, curseur + 1);\n\n  if (labels1.length === 0) {\n    res.push(texte.substring(curseur, texte.length));\n  } else if (labels1.length === 1) {\n    let id = \"propaganda\" + labels1[0];\n    res.push( /*#__PURE__*/_jsxDEV(\"mark\", {\n      id: id,\n      children: texte.substring(curseur, texte.length)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 14\n    }, this));\n  } else {\n    let id = \"propaganda\" + 99;\n    res.push( /*#__PURE__*/_jsxDEV(\"mark\", {\n      id: id,\n      children: texte.substring(curseur, texte.length)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 14\n    }, this));\n  }\n}\n\nfunction labels(spans, curseur) {\n  let labels = [];\n\n  for (let i = 0; i < spans.length; i++) {\n    if (curseur >= spans[i].start_char && curseur <= spans[i].end_index) {\n      labels.push(spans[i].label);\n    }\n  }\n\n  return labels;\n}\n\nexport default Service1_1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service1_1\");","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/src/pages/service1_1.js"],"names":["React","data","Button","Multiplechkbox","Link","spans","Service1_1","position","right","texte2","left","marginTop","top","texte","tableau","tabTexte","index","length","push","text","duplicateTexte","label","curseur","indexOf","span","id","substring","res","taillePropaganda","tailleSpan","i","article701225819","j","v","sort","compare","a","b","start_char","spanCourant","spanText","end_index","over","spanSuivant","overlap","SpansOverlap","intervalles","splice","tab","approche","span1","span2","inter","byValue","sorted","labels1","labels"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import {Reponse} from '../components/textInput'\r\nimport data from \"../json/jsonmockV3.json\"\r\nimport \"../styles/service1_1.css\"\r\nimport Button from '../components/button';\r\nimport Multiplechkbox from '../components/MultipleChkbox';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nlet spans=[]\r\n\r\nconst Service1_1 = () => {\r\n    return (\r\n      <div\r\n>\r\n        <div>\r\n    \r\n        \r\n      <div id=\"res\" style={{\r\n      position: 'absolute',\r\n      right:'20%',\r\n      }}>{texte2()} \r\n      <div id=\"btn\">\r\n      <Link to=\"/\" ><Button style={{\r\n        \r\n        position: 'relative',\r\n        left: '50%',\r\n        marginTop:'2em'\r\n        \r\n        \r\n      }}>Retour</Button>\r\n      </Link>\r\n      \r\n      </div>\r\n         \r\n\r\n      </div> \r\n      <div style={{\r\n        \r\n        position: 'absolute',\r\n        left: '80%',\r\n        top:'25%',        \r\n        \r\n      }}>\r\n           <Multiplechkbox/>\r\n         </div>\r\n         { /* <mark>test</mark>*/}\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n  };\r\n  \r\n  function texte(){\r\n   \r\n\r\n   \r\n   let tableau=[]\r\n   //let tabSpan=[]\r\n   let tabTexte=[]\r\n   for(let index=0;index<data.length;index++){\r\n    //tabSpan.push(data[index].span);\r\n    tabTexte.push(data[index].text);\r\n   }\r\n   for(let index=0;index<data.length;index++){\r\n    \r\n\r\n    if( duplicateTexte(tabTexte,data[index].text,index)){\r\n      //TOUT CE QUI NE FONCTIONNE PAS\r\n     /* let cpt=1;\r\n      tabSpan.push(data[index].span)\r\n      while(index+cpt<data.length && data[index+cpt].text===data[index].text){\r\n        tabSpan.push(data[index+cpt].span)\r\n        console.log(data[index+cpt].span)\r\n        cpt++;\r\n        console.log(cpt)\r\n\r\n      }\r\n      //Trier le tableau de span A revoir on sait jamais\r\n      tabSpan.sort(function compare(a, b) {\r\n        if (data[index].text.indexOf(a) < data[index].text.indexOf(b) )\r\n           return -1;\r\n        if (data[index].text.indexOf(a) > data[index].text.indexOf(b) )\r\n           return 1;\r\n        return 0;\r\n      }); \r\n      //Traiter chaque span\r\n      let sans_doublons = Array.from(new Set(tabSpan));\r\n\r\n      console.log(\"Sans doublon \")\r\n      console.log(sans_doublons)\r\n      console.log(\"tabSpan \")\r\n      console.log(tabSpan)\r\n     sans_doublons.sort(function compare(a, b) {\r\n        if (data[index].text.indexOf(a) < data[index].text.indexOf(b) )\r\n           return -1;\r\n        if (data[index].text.indexOf(a) > data[index].text.indexOf(b) )\r\n           return 1;\r\n        return 0;\r\n      }); \r\n      let boucle=0;\r\n      let curseur=0;\r\n      //A REVOIR\r\n      while(boucle<sans_doublons.length && curseur<data[index].text.length){\r\n        if(data[index].text.indexOf(sans_doublons[boucle])!==-1){\r\n          tableau.push(data[index].text.substring(curseur,data[index].text.indexOf(sans_doublons[boucle])))\r\n          let id=\"propaganda\"+data[index].label\r\n        tableau.push(<mark id={id}>{sans_doublons[boucle]}</mark>)\r\n        curseur=data[index].text.indexOf(sans_doublons[boucle])+sans_doublons[boucle].length\r\n        }\r\n        //IF ICI\r\n        if(index===3){\r\n          //console.log(sans_doublons)\r\n        }\r\n        \r\n        console.log(curseur)\r\n        boucle++;\r\n      }\r\n      \r\n      tableau.push(data[index].text.substring(curseur,data[index].text.length))\r\n\r\n\r\n      console.log(data[index].text)\r\n      console.log(sans_doublons)\r\n      tabSpan.slice(0, tabSpan.length);\r\n      sans_doublons.slice(0, sans_doublons.length);\r\n      index=index+cpt+1;\r\n\r\n       */\r\n    }\r\n    else{\r\n      if(data[index].label===0){\r\n        //Pas de propagande\r\n        tableau.push(data[index].text)\r\n        tableau.push(\" \");\r\n\r\n\r\n\r\n      }\r\n      else{\r\n        //Un mot de propagande en une phrase\r\n        let curseur=data[index].text.indexOf(data[index].span);\r\n        let id=\"propaganda\"+data[index].label\r\n        tableau.push(data[index].text.substring(0,curseur));\r\n        tableau.push(<mark id={id}>{data[index].span}</mark>)\r\n        tableau.push(data[index].text.substring(curseur+data[index].span.length));\r\n        tableau.push(\" \");\r\n\r\n        //console.log(data[index].text.substring(0,curseur))\r\n\r\n\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n /* let tab=[]\r\n  tab.push(data[0].text);\r\n\r\n  for(let i=1;i<data.length;i++){\r\n    if(data[i].text!==data[i-1].text)\r\n    tab.push(data[i].text);\r\n  }\r\n  return tab*/\r\n  return tableau;\r\n}\r\nfunction texte2(){\r\n  let spans=[]\r\n  let res=[]\r\n  let taillePropaganda=0;\r\n  let tailleSpan=0;\r\n  let text=\"\"\r\n  for(let i in data.article701225819){\r\n    taillePropaganda++;\r\n  }\r\n  //Pour chaque propagande\r\n  for(let i=1;i<taillePropaganda+1;i++){\r\n    for(let j in data.article701225819[\"propaganda_\"+i]){\r\n      tailleSpan++;\r\n    }\r\n    text=data.article701225819[\"propaganda_\"+i].text\r\n    for(let v=1;v<tailleSpan;v++){\r\n      spans.push(data.article701225819[\"propaganda_\"+i][\"span_\"+v])\r\n\r\n    }\r\n    spans.sort(function compare(a, b) {\r\n      if (a.start_char < b.start_char )\r\n         return -1;\r\n      if (a.start_char > b.start_char )\r\n         return 1;\r\n      return 0;\r\n    }); \r\n    let curseur=0;\r\n    for(let v=0;v<spans.length;v++){\r\n      let spanCourant=spans[v]\r\n      let spanText=spans[v].span\r\n      //console.log(spanText)\r\n      //1 span par phrase\r\n      if(tailleSpan-1===1){\r\n        res.push(text.substring(0,spanCourant.start_char))\r\n        let id=\"propaganda\"+spans[v].label\r\n        res.push(<mark id={id}>{spanText}</mark>)\r\n        res.push(text.substring(spanCourant.end_index,text.length)+\" \")\r\n\r\n      }else{\r\n        //On regarde si Ã§a se chevauche\r\n        let over=0;\r\n        if(v+1<spans.length){\r\n          let spanSuivant=spans[v+1]\r\n          \r\n          if(overlap(spanCourant,spanSuivant)){\r\n            let SpansOverlap=[]\r\n             /*SpansOverlap.push(spanCourant)\r\n             SpansOverlap.push(spanSuivant)*/\r\n             let j=v;\r\n             while(j+1<spans.length && (overlap(spans[j],spans[j+1]) || overlap(spanCourant,spans[j+1]))){\r\n              SpansOverlap.push(spans[j])\r\n              SpansOverlap.push(spans[j+1])\r\n              j++;\r\n              \r\n             }\r\n             SpansOverlap.sort(function compare(a, b) {\r\n              if (a.start_char < b.start_char )\r\n                 return -1;\r\n              if (a.start_char > b.start_char )\r\n                 return 1;\r\n              return 0;\r\n            }); \r\n            //console.log(\"CURSEUR \"+curseur)\r\n            intervalles(SpansOverlap,text,res,curseur);\r\n            v=v+SpansOverlap.length;\r\n\r\n\r\n            over=1;\r\n          }\r\n         \r\n          \r\n\r\n        }\r\n        if(over!==1){\r\n          over=0;\r\n          let id=\"propaganda\"+spanCourant.label\r\n          //console.log(text.substring(curseur,spanCourant))\r\n          //console.log(text)\r\n          res.push(text.substring(curseur,spanCourant.start_char))\r\n          res.push(<mark id={id}>{spanCourant.span}</mark>)\r\n          curseur=spanCourant.end_index;\r\n        }\r\n      }\r\n    }\r\n    if(tailleSpan-1!==1){\r\n      res.push(text.substring(curseur,text.length))\r\n\r\n    }\r\n    curseur=0;\r\n    tailleSpan=0;\r\n    spans.splice(0,spans.length)\r\n  }\r\n  return res;\r\n // console.log(data.article701225819[propagandas[0]][\"span_1\"].probability);\r\n\r\n        \r\n  //console.log(data[0].span_1)\r\n}\r\n\r\n  function duplicateTexte(tab,texte,index){\r\n    for(let i=0;i<tab.length;i++){\r\n      let approche=i-index;\r\n      if((approche===1 || approche===-1 )&&tab[i]===texte){\r\n        return true;\r\n      }\r\n    }\r\n  \r\n  }\r\n  \r\n  /*function duplicateSpan(tab,span){\r\n    for(let i=0;i<tab.length;i++){\r\n      if(tab[i]===span){\r\n        return true;\r\n      }\r\n    }\r\n   \r\n  }*/\r\n  function overlap(span1,span2){\r\n      if((span2.start_char>=span1.start_char && span2.start_char<=span1.end_index)||(span2.end_index>=span1.start_char && span2.end_index<=span1.end_index)){\r\n        return true;\r\n      }\r\n\r\n  }\r\n  function intervalles(spans,texte,res,curseur){\r\n   let inter=[]\r\n   for(let i=0;i<spans.length;i++){\r\n     inter.push(spans[i].start_char)\r\n     inter.push(spans[i].end_index)\r\n   }\r\n   const byValue = (a,b) => a - b;\r\n   const sorted=[...inter].sort(byValue);\r\n   //console.log(\"TEXTE \"+texte)\r\n   //console.log(\"TEST2 \"+sorted[0])\r\n   res.push(texte.substring(curseur,sorted[0]))\r\n   //console.log(\"TEST \"+texte.substring(curseur,spans[0].start_char))\r\n   curseur=sorted[0];\r\n   let labels1=[]\r\n   \r\n   for(let i=1;i<sorted.length;i++){\r\n    labels1=labels(spans,curseur+1);\r\n    //console.log(\"CURSEUR +1 \"+(curseur+1))\r\n    if(labels1.length===1){\r\n      let id=\"propaganda\"+labels1[0];\r\n      if(curseur!==sorted[i]){\r\n        res.push(<mark id={id} labels={labels1}>{texte.substring(curseur,sorted[i])}</mark>)\r\n\r\n      }\r\n    }else{\r\n      \r\n      let id=\"propaganda\"+99;\r\n      if(curseur!==sorted[i]){\r\n        res.push(<mark id={id} labels={labels1}>{texte.substring(curseur,sorted[i])}</mark>)\r\n\r\n      }\r\n      \r\n\r\n    }\r\n    curseur=sorted[i];\r\n    labels1.splice(0,labels1.length)\r\n\r\n   }\r\n   labels1=labels(spans,curseur+1);\r\n   if(labels1.length===0){\r\n     res.push(texte.substring(curseur,texte.length))\r\n   }else if(labels1.length===1){\r\n    let id=\"propaganda\"+labels1[0];\r\n    res.push(<mark id={id}>{texte.substring(curseur,texte.length)}</mark>)\r\n\r\n   }else{\r\n    let id=\"propaganda\"+99;\r\n    res.push(<mark id={id}>{texte.substring(curseur,texte.length)}</mark>)\r\n   }\r\n  }\r\n\r\n  function labels(spans,curseur){\r\n    let labels=[]\r\n    for(let i=0;i<spans.length;i++){\r\n      if(curseur>=spans[i].start_char && curseur<=spans[i].end_index){\r\n        labels.push(spans[i].label)\r\n      }\r\n    }\r\n    return labels;\r\n  }\r\n  export default Service1_1;\r\n"]},"metadata":{},"sourceType":"module"}