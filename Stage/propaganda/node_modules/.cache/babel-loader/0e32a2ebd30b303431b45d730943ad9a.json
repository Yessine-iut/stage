{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dofla\\\\Desktop\\\\Stage\\\\propaganda\\\\src\\\\pages\\\\service2_1.js\";\nimport React from 'react'; //import {Reponse} from '../components/textInput'\n\nimport data from \"../json/jsonmockV4.json\";\nimport Button from '../components/button';\nimport Multiplechkbox from '../components/MultipleChkbox';\nimport { Link } from \"react-router-dom\";\nimport WordCloud from 'react-d3-cloud';\nimport Cloud from 'react-wordcloud';\nimport \"tippy.js/dist/tippy.css\";\nimport \"tippy.js/animations/scale.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst word = [{\n  text: 'Hey',\n  value: 1000\n}, {\n  text: 'lol',\n  value: 200\n}, {\n  text: 'first impression',\n  value: 800\n}, {\n  text: 'very cool',\n  value: 1000000\n}, {\n  text: 'duck',\n  value: 10\n}];\n\nconst fontSizeMapper = word => Math.log2(word.value) * 5;\n\nconst rotate = word => word.value % 360;\n\nconst Service2_1 = () => {\n  return /*#__PURE__*/_jsxDEV(WordCloud, {\n    data: word,\n    fontSizeMapper: fontSizeMapper,\n    rotate: rotate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 1\n  }, this);\n};\n\n_c = Service2_1;\n\nfunction Datacloud() {\n  let propagandas = [\"Appeal_to_Authority\", \"Appeal_to_fear-prejudice\", \"Bandwagon,Reductio_ad_hitlerum\", \"Black-and-White_Fallacy\", \"Causal_Oversimplification\", \"Doubt\", \"Exaggeration,Minimisation\", \"Flag-Waving\", \"Loaded_Language\", \"Name_Calling,Labeling\", \"Repetition\", \"Slogans\", \"Thought-terminating_Cliches\", \"Whataboutism,Straw_Men,Red_Herring\"];\n  let spans = [];\n  let res = []; // let taillePropaganda=0;\n\n  let tailleSpan = 0;\n  let text = \"\";\n\n  for (let i in data.article701225819) {\n    for (let j in data.article701225819[i]) {\n      if (j !== 'text') {\n        /*console.log(\"type of \"+typeof(data.article701225819[i][j].label))\r\n        console.log(\"texte \"+data.article701225819[i][j].span)\r\n        console.log(\"i \"+i)\r\n        console.log(\"j \"+j+1)*/\n        if (typeof data.article701225819[i][j].label !== 'object') {\n          // console.log(\"test\")\n          if (data.article701225819[i][j].label !== 0) {\n            let spanCourant = new Object();\n            spanCourant.label = data.article701225819[i][j].label;\n            spanCourant.span = data.article701225819[i][j].span;\n            spanCourant.probability = data.article701225819[i][j].probability;\n            spans.push(spanCourant);\n          }\n        } else {\n          for (let v = 0; v < data.article701225819[i][j].label.length; v++) {\n            let spanCourant = new Object();\n            spanCourant.label = data.article701225819[i][j].label[v];\n            spanCourant.probability = data.article701225819[i][j].probability[v];\n            spanCourant.span = data.article701225819[i].text.substring(data.article701225819[i][j].start_char[v], data.article701225819[i][j].end_index[v]);\n            spans.push(spanCourant);\n          }\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < spans.length; i++) {\n    console.log(\"SPANS \" + spans[i].span);\n  }\n\n  return res; // console.log(data.article701225819[propagandas[0]][\"span_1\"].probability);\n  //console.log(data[0].span_1)\n}\n\n_c2 = Datacloud;\n\nfunction SimpleWordcloud() {\n  const words = [{\n    text: 'told',\n    value: 640\n  }, {\n    text: 'mistake',\n    value: 700\n  }, {\n    text: 'thought',\n    value: 890\n  }, {\n    text: 'bad',\n    value: 1090\n  }];\n  const callbacks = {\n    getWordColor: word => word.value > 50 ? \"blue\" : \"red\",\n    onWordClick: console.log,\n    onWordMouseOver: console.log,\n    getWordTooltip: word => `${word.text} (${word.value}) [${word.value > 50 ? \"good\" : \"bad\"}]`\n  };\n  const options = {\n    rotations: 2,\n    rotationAngles: [-90, 0]\n  }; //const size = [600, 400];\n  //let words=Datacloud()\n\n  return /*#__PURE__*/_jsxDEV(ReactWordcloud, {\n    callbacks: callbacks,\n    options: options,\n    words: words\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = SimpleWordcloud;\nexport default Service2_1;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Service2_1\");\n$RefreshReg$(_c2, \"Datacloud\");\n$RefreshReg$(_c3, \"SimpleWordcloud\");","map":{"version":3,"sources":["C:/Users/dofla/Desktop/Stage/propaganda/src/pages/service2_1.js"],"names":["React","data","Button","Multiplechkbox","Link","WordCloud","Cloud","word","text","value","fontSizeMapper","Math","log2","rotate","Service2_1","Datacloud","propagandas","spans","res","tailleSpan","i","article701225819","j","label","spanCourant","Object","span","probability","push","v","length","substring","start_char","end_index","console","log","SimpleWordcloud","words","callbacks","getWordColor","onWordClick","onWordMouseOver","getWordTooltip","options","rotations","rotationAngles"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import {Reponse} from '../components/textInput'\r\nimport data from \"../json/jsonmockV4.json\"\r\nimport Button from '../components/button';\r\nimport Multiplechkbox from '../components/MultipleChkbox';\r\nimport {Link} from \"react-router-dom\";\r\nimport WordCloud from 'react-d3-cloud';\r\nimport Cloud from 'react-wordcloud';\r\n\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport \"tippy.js/animations/scale.css\";\r\n\r\n\r\nconst word = [\r\n  { text: 'Hey', value: 1000 },\r\n  { text: 'lol', value: 200 },\r\n  { text: 'first impression', value: 800 },\r\n  { text: 'very cool', value: 1000000 },\r\n  { text: 'duck', value: 10 },\r\n];\r\nconst fontSizeMapper = word => Math.log2(word.value) * 5;\r\nconst rotate = word => word.value % 360;\r\n\r\nconst Service2_1 = () => {\r\n    return (\r\n<WordCloud\r\n    data={word}\r\n    fontSizeMapper={fontSizeMapper}\r\n    rotate={rotate}\r\n  />    );\r\n  };\r\n  \r\n \r\nfunction Datacloud(){\r\n  let propagandas=[\"Appeal_to_Authority\",\"Appeal_to_fear-prejudice\",\"Bandwagon,Reductio_ad_hitlerum\",\"Black-and-White_Fallacy\",\"Causal_Oversimplification\",\"Doubt\",\"Exaggeration,Minimisation\",\"Flag-Waving\",\"Loaded_Language\",\"Name_Calling,Labeling\",\"Repetition\",\"Slogans\",\"Thought-terminating_Cliches\",\"Whataboutism,Straw_Men,Red_Herring\"]\r\n  let spans=[]\r\n  let res=[]\r\n // let taillePropaganda=0;\r\n  let tailleSpan=0;\r\n  let text=\"\"\r\n  for(let i in data.article701225819){\r\n\r\n    for(let j in data.article701225819[i]){\r\n        if(j!=='text'){\r\n\r\n        \r\n      /*console.log(\"type of \"+typeof(data.article701225819[i][j].label))\r\n      console.log(\"texte \"+data.article701225819[i][j].span)\r\n      console.log(\"i \"+i)\r\n      console.log(\"j \"+j+1)*/\r\n   \r\n      if(typeof(data.article701225819[i][j].label)!=='object'){\r\n       // console.log(\"test\")\r\n       if(data.article701225819[i][j].label!==0){\r\n       let spanCourant=new Object();\r\n       spanCourant.label=data.article701225819[i][j].label;\r\n       spanCourant.span=data.article701225819[i][j].span;\r\n       spanCourant.probability=data.article701225819[i][j].probability;\r\n        spans.push(spanCourant)\r\n      }\r\n      }else{\r\n        for(let v=0;v<data.article701225819[i][j].label.length;v++){\r\n\r\n          let spanCourant=new Object();\r\n          spanCourant.label=data.article701225819[i][j].label[v];\r\n          spanCourant.probability=data.article701225819[i][j].probability[v];\r\n          spanCourant.span=data.article701225819[i].text.substring(data.article701225819[i][j].start_char[v],data.article701225819[i][j].end_index[v]);\r\n          spans.push(spanCourant)\r\n        \r\n          \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  }    \r\n   \r\n  for(let i=0;i<spans.length;i++){\r\n    console.log(\"SPANS \"+spans[i].span)\r\n\r\n  }\r\n\r\n  \r\n  return res;\r\n // console.log(data.article701225819[propagandas[0]][\"span_1\"].probability);\r\n\r\n        \r\n  //console.log(data[0].span_1)\r\n}\r\nfunction SimpleWordcloud() {\r\n  const words = [\r\n    {\r\n      text: 'told',\r\n      value: 640,\r\n    },\r\n    {\r\n      text: 'mistake',\r\n      value: 700,\r\n    },\r\n    {\r\n      text: 'thought',\r\n      value: 890,\r\n    },\r\n    {\r\n      text: 'bad',\r\n      value: 1090,\r\n    },\r\n  ]\r\n  const callbacks = {\r\n    getWordColor: word => word.value > 50 ? \"blue\" : \"red\",\r\n    onWordClick: console.log,\r\n    onWordMouseOver: console.log,\r\n    getWordTooltip: word => `${word.text} (${word.value}) [${word.value > 50 ? \"good\" : \"bad\"}]`,\r\n  }\r\n  const options = {\r\n    rotations: 2,\r\n    rotationAngles: [-90, 0],\r\n  };\r\n  //const size = [600, 400];\r\n   \r\n  \r\n  //let words=Datacloud()\r\n  return <ReactWordcloud  callbacks={callbacks}\r\n  options={options}\r\n  words={words} />\r\n}\r\n\r\n \r\n\r\n \r\n  export default Service2_1;\r\n"]},"metadata":{},"sourceType":"module"}